Rules useless in parser due to conflicts

   83 $@7: /* empty */

   92 $@13: /* empty */


State 17 conflicts: 1 reduce/reduce
State 116 conflicts: 1 reduce/reduce


Grammar

    0 $accept: stmts $end

    1 stmts: stmts stmt
    2      | stmt

    3 stmt: expr SEMICOLON

    4 $@1: /* empty */

    5 stmt: LBRACE $@1 stmts RBRACE
    6     | const_dec_stmt
    7     | var_dec_stmt
    8     | assign_stmt
    9     | while_stmt
   10     | if_stmt
   11     | repeat_until_stmt
   12     | for_stmt
   13     | switch_stmt
   14     | function
   15     | RETURN ret_val SEMICOLON
   16     | BREAK SEMICOLON
   17     | CONTINUE SEMICOLON
   18     | PRINT LPAREN value RPAREN SEMICOLON

   19 ret_val: value
   20        | /* empty */

   21 value: expr
   22      | STRING_VAL
   23      | CHAR_VAL

   24 expr: bool_expr
   25     | arithmetic_expr

   26 bool_expr: expr EQUAL arithmetic_expr
   27          | expr NE arithmetic_expr
   28          | expr GREATER arithmetic_expr
   29          | expr LESS arithmetic_expr
   30          | expr GE arithmetic_expr
   31          | expr LE arithmetic_expr
   32          | expr AND expr
   33          | expr OR expr
   34          | NOT expr
   35          | LPAREN bool_expr RPAREN
   36          | TRUE_VAL
   37          | FALSE_VAL

   38 arithmetic_expr: binary_expr
   39                | unary_expr

   40 unary_expr: IDENTIFIER INC
   41           | IDENTIFIER DEC

   42 binary_expr: term
   43            | binary_expr PLUS term
   44            | binary_expr MINUS term

   45 term: negat
   46     | term MULT factor
   47     | term DIV factor
   48     | term MOD factor

   49 negat: para
   50      | MINUS para

   51 para: factor
   52     | LPAREN binary_expr RPAREN

   53 factor: INT_VAL
   54       | FLOAT_VAL
   55       | factor EXP factor
   56       | function_call
   57       | IDENTIFIER

   58 function_call: IDENTIFIER LPAREN RPAREN

   59 $@2: /* empty */

   60 function_call: IDENTIFIER LPAREN $@2 call_params RPAREN

   61 call_params: call_params COMMA value
   62            | value

   63 constant: INT_VAL
   64         | FLOAT_VAL
   65         | STRING_VAL
   66         | CHAR_VAL
   67         | TRUE_VAL
   68         | FALSE_VAL

   69 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON

   70 var_dec_stmt: type IDENTIFIER SEMICOLON
   71             | type IDENTIFIER ASSIGN value SEMICOLON

   72 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON
   73            | IDENTIFIER DIV_EQ value SEMICOLON
   74            | IDENTIFIER MULT_EQ value SEMICOLON
   75            | IDENTIFIER PLUS_EQ value SEMICOLON
   76            | IDENTIFIER MINUS_EQ value SEMICOLON

   77 $@3: /* empty */

   78 $@4: /* empty */

   79 while_stmt: WHILE LPAREN expr $@3 RPAREN LBRACE $@4 stmts RBRACE

   80 $@5: /* empty */

   81 $@6: /* empty */

   82 if_stmt: IF LPAREN expr $@5 RPAREN LBRACE $@6 stmts RBRACE

   83 $@7: /* empty */

   84 $@8: /* empty */

   85 $@9: /* empty */

   86 $@10: /* empty */

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

   88 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

   89 $@11: /* empty */

   90 $@12: /* empty */

   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr $@12 SEMICOLON expr RPAREN LBRACE stmts RBRACE

   92 $@13: /* empty */

   93 $@14: /* empty */

   94 for_stmt: FOR $@13 LPAREN assign_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

   95 $@15: /* empty */

   96 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE $@15 case_stmts RBRACE

   97 case_stmts: case_stmts case_stmt
   98           | case_stmt

   99 case_stmt: CASE value COLON stmts
  100          | DEFAULT COLON stmts

  101 type: INT
  102     | FLOAT
  103     | CHAR
  104     | STRING
  105     | BOOL

  106 function: function_prototype LBRACE stmts RBRACE

  107 function_prototype: VOID IDENTIFIER LPAREN params RPAREN
  108                   | VOID IDENTIFIER LPAREN RPAREN
  109                   | type IDENTIFIER LPAREN params RPAREN
  110                   | type IDENTIFIER LPAREN RPAREN

  111 params: param
  112       | params COMMA param

  113 param: type IDENTIFIER
  114      | type IDENTIFIER ASSIGN constant


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 101
FLOAT (259) 102
CHAR (260) 103
BOOL (261) 105
STRING (262) 104
IDENTIFIER (263) 40 41 57 58 60 69 70 71 72 73 74 75 76 107 108 109
    110 113 114
INT_VAL (264) 53 63
FLOAT_VAL (265) 54 64
CHAR_VAL (266) 23 66
STRING_VAL (267) 22 65
TRUE_VAL (268) 36 67
FALSE_VAL (269) 37 68
CONST (270) 69
SEMICOLON (271) 3 15 16 17 18 69 70 71 72 73 74 75 76 88 91 94
COMMA (272) 61 112
LBRACE (273) 5 79 82 87 88 91 94 96 106
RBRACE (274) 5 79 82 87 88 91 94 96 106
LPAREN (275) 18 35 52 58 60 79 82 87 88 91 94 96 107 108 109 110
RPAREN (276) 18 35 52 58 60 79 82 87 88 91 94 96 107 108 109 110
BREAK (277) 16
CONTINUE (278) 17
WHILE (279) 79
FOR (280) 91 94
SWITCH (281) 96
CASE (282) 99
DEFAULT (283) 100
COLON (284) 99 100
IF (285) 82 87
ELSE (286) 87
REPEAT (287) 88
UNTIL (288) 88
LE (289) 31
GE (290) 30
NE (291) 27
EQUAL (292) 26
LESS (293) 29
GREATER (294) 28
MINUS (295) 44 50
PLUS (296) 43
MOD (297) 48
DIV (298) 47
MULT (299) 46
EXP (300) 55
OR (301) 33
AND (302) 32
NOT (303) 34
ASSIGN (304) 69 71 72 114
DIV_EQ (305) 73
PLUS_EQ (306) 75
MINUS_EQ (307) 76
MULT_EQ (308) 74
INC (309) 40
DEC (310) 41
UMINUS (311)
VOID (312) 107 108
RETURN (313) 15
PRINT (314) 18


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
stmts (61)
    on left: 1 2, on right: 0 1 5 79 82 87 88 91 94 99 100 106
stmt (62)
    on left: 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 1 2
$@1 (63)
    on left: 4, on right: 5
ret_val (64)
    on left: 19 20, on right: 15
value (65)
    on left: 21 22 23, on right: 18 19 61 62 71 72 73 74 75 76 99
expr (66)
    on left: 24 25, on right: 3 21 26 27 28 29 30 31 32 33 34 79 82
    87 88 91 94 96
bool_expr (67)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37, on right: 24 35
arithmetic_expr (68)
    on left: 38 39, on right: 25 26 27 28 29 30 31
unary_expr (69)
    on left: 40 41, on right: 39
binary_expr (70)
    on left: 42 43 44, on right: 38 43 44 52
term (71)
    on left: 45 46 47 48, on right: 42 43 44 46 47 48
negat (72)
    on left: 49 50, on right: 45
para (73)
    on left: 51 52, on right: 49 50
factor (74)
    on left: 53 54 55 56 57, on right: 46 47 48 51 55
function_call (75)
    on left: 58 60, on right: 56
$@2 (76)
    on left: 59, on right: 60
call_params (77)
    on left: 61 62, on right: 60 61
constant (78)
    on left: 63 64 65 66 67 68, on right: 69 114
const_dec_stmt (79)
    on left: 69, on right: 6
var_dec_stmt (80)
    on left: 70 71, on right: 7 91
assign_stmt (81)
    on left: 72 73 74 75 76, on right: 8 94
while_stmt (82)
    on left: 79, on right: 9
$@3 (83)
    on left: 77, on right: 79
$@4 (84)
    on left: 78, on right: 79
if_stmt (85)
    on left: 82 87, on right: 10
$@5 (86)
    on left: 80, on right: 82
$@6 (87)
    on left: 81, on right: 82
$@7 (88)
    on left: 83, on right: 87
$@8 (89)
    on left: 84, on right: 87
$@9 (90)
    on left: 85, on right: 87
$@10 (91)
    on left: 86, on right: 87
repeat_until_stmt (92)
    on left: 88, on right: 11
for_stmt (93)
    on left: 91 94, on right: 12
$@11 (94)
    on left: 89, on right: 91
$@12 (95)
    on left: 90, on right: 91
$@13 (96)
    on left: 92, on right: 94
$@14 (97)
    on left: 93, on right: 94
switch_stmt (98)
    on left: 96, on right: 13
$@15 (99)
    on left: 95, on right: 96
case_stmts (100)
    on left: 97 98, on right: 96 97
case_stmt (101)
    on left: 99 100, on right: 97 98
type (102)
    on left: 101 102 103 104 105, on right: 69 70 71 109 110 113 114
function (103)
    on left: 106, on right: 14
function_prototype (104)
    on left: 107 108 109 110, on right: 106
params (105)
    on left: 111 112, on right: 107 109 112
param (106)
    on left: 113 114, on right: 111 112


state 0

    0 $accept: . stmts $end

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 26
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 1

  101 type: INT .

    $default  reduce using rule 101 (type)


state 2

  102 type: FLOAT .

    $default  reduce using rule 102 (type)


state 3

  103 type: CHAR .

    $default  reduce using rule 103 (type)


state 4

  105 type: BOOL .

    $default  reduce using rule 105 (type)


state 5

  104 type: STRING .

    $default  reduce using rule 104 (type)


state 6

   40 unary_expr: IDENTIFIER . INC
   41           | IDENTIFIER . DEC
   57 factor: IDENTIFIER .
   58 function_call: IDENTIFIER . LPAREN RPAREN
   60              | IDENTIFIER . LPAREN $@2 call_params RPAREN
   72 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   73            | IDENTIFIER . DIV_EQ value SEMICOLON
   74            | IDENTIFIER . MULT_EQ value SEMICOLON
   75            | IDENTIFIER . PLUS_EQ value SEMICOLON
   76            | IDENTIFIER . MINUS_EQ value SEMICOLON

    LPAREN    shift, and go to state 49
    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54
    INC       shift, and go to state 55
    DEC       shift, and go to state 56

    $default  reduce using rule 57 (factor)


state 7

   53 factor: INT_VAL .

    $default  reduce using rule 53 (factor)


state 8

   54 factor: FLOAT_VAL .

    $default  reduce using rule 54 (factor)


state 9

   36 bool_expr: TRUE_VAL .

    $default  reduce using rule 36 (bool_expr)


state 10

   37 bool_expr: FALSE_VAL .

    $default  reduce using rule 37 (bool_expr)


state 11

   69 const_dec_stmt: CONST . type IDENTIFIER ASSIGN constant SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type  go to state 57


state 12

    5 stmt: LBRACE . $@1 stmts RBRACE

    $default  reduce using rule 4 ($@1)

    $@1  go to state 58


state 13

   35 bool_expr: LPAREN . bool_expr RPAREN
   52 para: LPAREN . binary_expr RPAREN

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 60
    bool_expr        go to state 61
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 62
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 14

   16 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 15

   17 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 64


state 16

   79 while_stmt: WHILE . LPAREN expr $@3 RPAREN LBRACE $@4 stmts RBRACE

    LPAREN  shift, and go to state 65


state 17

   91 for_stmt: FOR . $@11 LPAREN var_dec_stmt expr $@12 SEMICOLON expr RPAREN LBRACE stmts RBRACE
   94         | FOR . $@13 LPAREN assign_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LPAREN    reduce using rule 89 ($@11)
    LPAREN    [reduce using rule 92 ($@13)]
    $default  reduce using rule 89 ($@11)

    $@11  go to state 66
    $@13  go to state 67


state 18

   96 switch_stmt: SWITCH . LPAREN expr RPAREN LBRACE $@15 case_stmts RBRACE

    LPAREN  shift, and go to state 68


state 19

   82 if_stmt: IF . LPAREN expr $@5 RPAREN LBRACE $@6 stmts RBRACE
   87        | IF . LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

    LPAREN  shift, and go to state 69


state 20

   88 repeat_until_stmt: REPEAT . LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    LBRACE  shift, and go to state 70


state 21

   50 negat: MINUS . para

    IDENTIFIER  shift, and go to state 71
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72

    para           go to state 73
    factor         go to state 36
    function_call  go to state 37


state 22

   34 bool_expr: NOT . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 74
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 23

  107 function_prototype: VOID . IDENTIFIER LPAREN params RPAREN
  108                   | VOID . IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 75


state 24

   15 stmt: RETURN . ret_val SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    $default  reduce using rule 20 (ret_val)

    ret_val          go to state 78
    value            go to state 79
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 25

   18 stmt: PRINT . LPAREN value RPAREN SEMICOLON

    LPAREN  shift, and go to state 81


state 26

    0 $accept: stmts . $end
    1 stmts: stmts . stmt

    $end        shift, and go to state 82
    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 27

    2 stmts: stmt .

    $default  reduce using rule 2 (stmts)


state 28

    3 stmt: expr . SEMICOLON
   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    SEMICOLON  shift, and go to state 84
    LE         shift, and go to state 85
    GE         shift, and go to state 86
    NE         shift, and go to state 87
    EQUAL      shift, and go to state 88
    LESS       shift, and go to state 89
    GREATER    shift, and go to state 90
    OR         shift, and go to state 91
    AND        shift, and go to state 92


state 29

   24 expr: bool_expr .

    $default  reduce using rule 24 (expr)


state 30

   25 expr: arithmetic_expr .

    $default  reduce using rule 25 (expr)


state 31

   39 arithmetic_expr: unary_expr .

    $default  reduce using rule 39 (arithmetic_expr)


state 32

   38 arithmetic_expr: binary_expr .
   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term

    MINUS  shift, and go to state 93
    PLUS   shift, and go to state 94

    $default  reduce using rule 38 (arithmetic_expr)


state 33

   42 binary_expr: term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 95
    DIV   shift, and go to state 96
    MULT  shift, and go to state 97

    $default  reduce using rule 42 (binary_expr)


state 34

   45 term: negat .

    $default  reduce using rule 45 (term)


state 35

   49 negat: para .

    $default  reduce using rule 49 (negat)


state 36

   51 para: factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 98

    $default  reduce using rule 51 (para)


state 37

   56 factor: function_call .

    $default  reduce using rule 56 (factor)


state 38

    6 stmt: const_dec_stmt .

    $default  reduce using rule 6 (stmt)


state 39

    7 stmt: var_dec_stmt .

    $default  reduce using rule 7 (stmt)


state 40

    8 stmt: assign_stmt .

    $default  reduce using rule 8 (stmt)


state 41

    9 stmt: while_stmt .

    $default  reduce using rule 9 (stmt)


state 42

   10 stmt: if_stmt .

    $default  reduce using rule 10 (stmt)


state 43

   11 stmt: repeat_until_stmt .

    $default  reduce using rule 11 (stmt)


state 44

   12 stmt: for_stmt .

    $default  reduce using rule 12 (stmt)


state 45

   13 stmt: switch_stmt .

    $default  reduce using rule 13 (stmt)


state 46

   70 var_dec_stmt: type . IDENTIFIER SEMICOLON
   71             | type . IDENTIFIER ASSIGN value SEMICOLON
  109 function_prototype: type . IDENTIFIER LPAREN params RPAREN
  110                   | type . IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 99


state 47

   14 stmt: function .

    $default  reduce using rule 14 (stmt)


state 48

  106 function: function_prototype . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 100


state 49

   58 function_call: IDENTIFIER LPAREN . RPAREN
   60              | IDENTIFIER LPAREN . $@2 call_params RPAREN

    RPAREN  shift, and go to state 101

    $default  reduce using rule 59 ($@2)

    $@2  go to state 102


state 50

   72 assign_stmt: IDENTIFIER ASSIGN . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 103
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 51

   73 assign_stmt: IDENTIFIER DIV_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 104
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 52

   75 assign_stmt: IDENTIFIER PLUS_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 105
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 53

   76 assign_stmt: IDENTIFIER MINUS_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 106
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 54

   74 assign_stmt: IDENTIFIER MULT_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 107
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 55

   40 unary_expr: IDENTIFIER INC .

    $default  reduce using rule 40 (unary_expr)


state 56

   41 unary_expr: IDENTIFIER DEC .

    $default  reduce using rule 41 (unary_expr)


state 57

   69 const_dec_stmt: CONST type . IDENTIFIER ASSIGN constant SEMICOLON

    IDENTIFIER  shift, and go to state 108


state 58

    5 stmt: LBRACE $@1 . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 109
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 59

   40 unary_expr: IDENTIFIER . INC
   41           | IDENTIFIER . DEC
   57 factor: IDENTIFIER .
   58 function_call: IDENTIFIER . LPAREN RPAREN
   60              | IDENTIFIER . LPAREN $@2 call_params RPAREN

    LPAREN  shift, and go to state 49
    INC     shift, and go to state 55
    DEC     shift, and go to state 56

    $default  reduce using rule 57 (factor)


state 60

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92


state 61

   24 expr: bool_expr .
   35 bool_expr: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 110

    $default  reduce using rule 24 (expr)


state 62

   38 arithmetic_expr: binary_expr .
   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term
   52 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 111
    MINUS   shift, and go to state 93
    PLUS    shift, and go to state 94

    $default  reduce using rule 38 (arithmetic_expr)


state 63

   16 stmt: BREAK SEMICOLON .

    $default  reduce using rule 16 (stmt)


state 64

   17 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 17 (stmt)


state 65

   79 while_stmt: WHILE LPAREN . expr $@3 RPAREN LBRACE $@4 stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 112
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 66

   91 for_stmt: FOR $@11 . LPAREN var_dec_stmt expr $@12 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LPAREN  shift, and go to state 113


state 67

   94 for_stmt: FOR $@13 . LPAREN assign_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LPAREN  shift, and go to state 114


state 68

   96 switch_stmt: SWITCH LPAREN . expr RPAREN LBRACE $@15 case_stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 115
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 69

   82 if_stmt: IF LPAREN . expr $@5 RPAREN LBRACE $@6 stmts RBRACE
   87        | IF LPAREN . expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 116
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 70

   88 repeat_until_stmt: REPEAT LBRACE . stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 117
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 71

   57 factor: IDENTIFIER .
   58 function_call: IDENTIFIER . LPAREN RPAREN
   60              | IDENTIFIER . LPAREN $@2 call_params RPAREN

    LPAREN  shift, and go to state 49

    $default  reduce using rule 57 (factor)


state 72

   52 para: LPAREN . binary_expr RPAREN

    IDENTIFIER  shift, and go to state 71
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    binary_expr    go to state 118
    term           go to state 33
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 73

   50 negat: MINUS para .

    $default  reduce using rule 50 (negat)


state 74

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   34          | NOT expr .

    $default  reduce using rule 34 (bool_expr)


state 75

  107 function_prototype: VOID IDENTIFIER . LPAREN params RPAREN
  108                   | VOID IDENTIFIER . LPAREN RPAREN

    LPAREN  shift, and go to state 119


state 76

   23 value: CHAR_VAL .

    $default  reduce using rule 23 (value)


state 77

   22 value: STRING_VAL .

    $default  reduce using rule 22 (value)


state 78

   15 stmt: RETURN ret_val . SEMICOLON

    SEMICOLON  shift, and go to state 120


state 79

   19 ret_val: value .

    $default  reduce using rule 19 (ret_val)


state 80

   21 value: expr .
   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92

    $default  reduce using rule 21 (value)


state 81

   18 stmt: PRINT LPAREN . value RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 121
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 82

    0 $accept: stmts $end .

    $default  accept


state 83

    1 stmts: stmts stmt .

    $default  reduce using rule 1 (stmts)


state 84

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


state 85

   31 bool_expr: expr LE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 122
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 86

   30 bool_expr: expr GE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 123
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 87

   27 bool_expr: expr NE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 124
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 88

   26 bool_expr: expr EQUAL . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 125
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 89

   29 bool_expr: expr LESS . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 126
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 90

   28 bool_expr: expr GREATER . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 127
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 91

   33 bool_expr: expr OR . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 128
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 92

   32 bool_expr: expr AND . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 129
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 93

   44 binary_expr: binary_expr MINUS . term

    IDENTIFIER  shift, and go to state 71
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    term           go to state 130
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 94

   43 binary_expr: binary_expr PLUS . term

    IDENTIFIER  shift, and go to state 71
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 72
    MINUS       shift, and go to state 21

    term           go to state 131
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 95

   48 term: term MOD . factor

    IDENTIFIER  shift, and go to state 71
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 132
    function_call  go to state 37


state 96

   47 term: term DIV . factor

    IDENTIFIER  shift, and go to state 71
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 133
    function_call  go to state 37


state 97

   46 term: term MULT . factor

    IDENTIFIER  shift, and go to state 71
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 134
    function_call  go to state 37


state 98

   55 factor: factor EXP . factor

    IDENTIFIER  shift, and go to state 71
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 135
    function_call  go to state 37


state 99

   70 var_dec_stmt: type IDENTIFIER . SEMICOLON
   71             | type IDENTIFIER . ASSIGN value SEMICOLON
  109 function_prototype: type IDENTIFIER . LPAREN params RPAREN
  110                   | type IDENTIFIER . LPAREN RPAREN

    SEMICOLON  shift, and go to state 136
    LPAREN     shift, and go to state 137
    ASSIGN     shift, and go to state 138


state 100

  106 function: function_prototype LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 139
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 101

   58 function_call: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 58 (function_call)


state 102

   60 function_call: IDENTIFIER LPAREN $@2 . call_params RPAREN

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 140
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37
    call_params      go to state 141


state 103

   72 assign_stmt: IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 142


state 104

   73 assign_stmt: IDENTIFIER DIV_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 143


state 105

   75 assign_stmt: IDENTIFIER PLUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 144


state 106

   76 assign_stmt: IDENTIFIER MINUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 145


state 107

   74 assign_stmt: IDENTIFIER MULT_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 146


state 108

   69 const_dec_stmt: CONST type IDENTIFIER . ASSIGN constant SEMICOLON

    ASSIGN  shift, and go to state 147


state 109

    1 stmts: stmts . stmt
    5 stmt: LBRACE $@1 stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 148
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 110

   35 bool_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 35 (bool_expr)


state 111

   52 para: LPAREN binary_expr RPAREN .

    $default  reduce using rule 52 (para)


state 112

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   79 while_stmt: WHILE LPAREN expr . $@3 RPAREN LBRACE $@4 stmts RBRACE

    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92

    $default  reduce using rule 77 ($@3)

    $@3  go to state 149


state 113

   91 for_stmt: FOR $@11 LPAREN . var_dec_stmt expr $@12 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    var_dec_stmt  go to state 150
    type          go to state 151


state 114

   94 for_stmt: FOR $@13 LPAREN . assign_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 152

    assign_stmt  go to state 153


state 115

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   96 switch_stmt: SWITCH LPAREN expr . RPAREN LBRACE $@15 case_stmts RBRACE

    RPAREN   shift, and go to state 154
    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92


state 116

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   82 if_stmt: IF LPAREN expr . $@5 RPAREN LBRACE $@6 stmts RBRACE
   87        | IF LPAREN expr . $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92

    RPAREN    reduce using rule 80 ($@5)
    RPAREN    [reduce using rule 83 ($@7)]
    $default  reduce using rule 80 ($@5)

    $@5  go to state 155
    $@7  go to state 156


state 117

    1 stmts: stmts . stmt
   88 repeat_until_stmt: REPEAT LBRACE stmts . RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 157
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 118

   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term
   52 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 111
    MINUS   shift, and go to state 93
    PLUS    shift, and go to state 94


state 119

  107 function_prototype: VOID IDENTIFIER LPAREN . params RPAREN
  108                   | VOID IDENTIFIER LPAREN . RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    RPAREN  shift, and go to state 158

    type    go to state 159
    params  go to state 160
    param   go to state 161


state 120

   15 stmt: RETURN ret_val SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 121

   18 stmt: PRINT LPAREN value . RPAREN SEMICOLON

    RPAREN  shift, and go to state 162


state 122

   31 bool_expr: expr LE arithmetic_expr .

    $default  reduce using rule 31 (bool_expr)


state 123

   30 bool_expr: expr GE arithmetic_expr .

    $default  reduce using rule 30 (bool_expr)


state 124

   27 bool_expr: expr NE arithmetic_expr .

    $default  reduce using rule 27 (bool_expr)


state 125

   26 bool_expr: expr EQUAL arithmetic_expr .

    $default  reduce using rule 26 (bool_expr)


state 126

   29 bool_expr: expr LESS arithmetic_expr .

    $default  reduce using rule 29 (bool_expr)


state 127

   28 bool_expr: expr GREATER arithmetic_expr .

    $default  reduce using rule 28 (bool_expr)


state 128

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   33          | expr OR expr .

    $default  reduce using rule 33 (bool_expr)


state 129

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   32          | expr AND expr .
   33          | expr . OR expr

    $default  reduce using rule 32 (bool_expr)


state 130

   44 binary_expr: binary_expr MINUS term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 95
    DIV   shift, and go to state 96
    MULT  shift, and go to state 97

    $default  reduce using rule 44 (binary_expr)


state 131

   43 binary_expr: binary_expr PLUS term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 95
    DIV   shift, and go to state 96
    MULT  shift, and go to state 97

    $default  reduce using rule 43 (binary_expr)


state 132

   48 term: term MOD factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 98

    $default  reduce using rule 48 (term)


state 133

   47 term: term DIV factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 98

    $default  reduce using rule 47 (term)


state 134

   46 term: term MULT factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 98

    $default  reduce using rule 46 (term)


state 135

   55 factor: factor . EXP factor
   55       | factor EXP factor .

    $default  reduce using rule 55 (factor)


state 136

   70 var_dec_stmt: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 70 (var_dec_stmt)


state 137

  109 function_prototype: type IDENTIFIER LPAREN . params RPAREN
  110                   | type IDENTIFIER LPAREN . RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    RPAREN  shift, and go to state 163

    type    go to state 159
    params  go to state 164
    param   go to state 161


state 138

   71 var_dec_stmt: type IDENTIFIER ASSIGN . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 165
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 139

    1 stmts: stmts . stmt
  106 function: function_prototype LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 166
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 140

   62 call_params: value .

    $default  reduce using rule 62 (call_params)


state 141

   60 function_call: IDENTIFIER LPAREN $@2 call_params . RPAREN
   61 call_params: call_params . COMMA value

    COMMA   shift, and go to state 167
    RPAREN  shift, and go to state 168


state 142

   72 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 72 (assign_stmt)


state 143

   73 assign_stmt: IDENTIFIER DIV_EQ value SEMICOLON .

    $default  reduce using rule 73 (assign_stmt)


state 144

   75 assign_stmt: IDENTIFIER PLUS_EQ value SEMICOLON .

    $default  reduce using rule 75 (assign_stmt)


state 145

   76 assign_stmt: IDENTIFIER MINUS_EQ value SEMICOLON .

    $default  reduce using rule 76 (assign_stmt)


state 146

   74 assign_stmt: IDENTIFIER MULT_EQ value SEMICOLON .

    $default  reduce using rule 74 (assign_stmt)


state 147

   69 const_dec_stmt: CONST type IDENTIFIER ASSIGN . constant SEMICOLON

    INT_VAL     shift, and go to state 169
    FLOAT_VAL   shift, and go to state 170
    CHAR_VAL    shift, and go to state 171
    STRING_VAL  shift, and go to state 172
    TRUE_VAL    shift, and go to state 173
    FALSE_VAL   shift, and go to state 174

    constant  go to state 175


state 148

    5 stmt: LBRACE $@1 stmts RBRACE .

    $default  reduce using rule 5 (stmt)


state 149

   79 while_stmt: WHILE LPAREN expr $@3 . RPAREN LBRACE $@4 stmts RBRACE

    RPAREN  shift, and go to state 176


state 150

   91 for_stmt: FOR $@11 LPAREN var_dec_stmt . expr $@12 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 177
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 151

   70 var_dec_stmt: type . IDENTIFIER SEMICOLON
   71             | type . IDENTIFIER ASSIGN value SEMICOLON

    IDENTIFIER  shift, and go to state 178


state 152

   72 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   73            | IDENTIFIER . DIV_EQ value SEMICOLON
   74            | IDENTIFIER . MULT_EQ value SEMICOLON
   75            | IDENTIFIER . PLUS_EQ value SEMICOLON
   76            | IDENTIFIER . MINUS_EQ value SEMICOLON

    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54


state 153

   94 for_stmt: FOR $@13 LPAREN assign_stmt . expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 179
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 154

   96 switch_stmt: SWITCH LPAREN expr RPAREN . LBRACE $@15 case_stmts RBRACE

    LBRACE  shift, and go to state 180


state 155

   82 if_stmt: IF LPAREN expr $@5 . RPAREN LBRACE $@6 stmts RBRACE

    RPAREN  shift, and go to state 181


state 156

   87 if_stmt: IF LPAREN expr $@7 . RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

    RPAREN  shift, and go to state 182


state 157

   88 repeat_until_stmt: REPEAT LBRACE stmts RBRACE . UNTIL LPAREN expr RPAREN SEMICOLON

    UNTIL  shift, and go to state 183


state 158

  108 function_prototype: VOID IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 108 (function_prototype)


state 159

  113 param: type . IDENTIFIER
  114      | type . IDENTIFIER ASSIGN constant

    IDENTIFIER  shift, and go to state 184


state 160

  107 function_prototype: VOID IDENTIFIER LPAREN params . RPAREN
  112 params: params . COMMA param

    COMMA   shift, and go to state 185
    RPAREN  shift, and go to state 186


state 161

  111 params: param .

    $default  reduce using rule 111 (params)


state 162

   18 stmt: PRINT LPAREN value RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 187


state 163

  110 function_prototype: type IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 110 (function_prototype)


state 164

  109 function_prototype: type IDENTIFIER LPAREN params . RPAREN
  112 params: params . COMMA param

    COMMA   shift, and go to state 185
    RPAREN  shift, and go to state 188


state 165

   71 var_dec_stmt: type IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 189


state 166

  106 function: function_prototype LBRACE stmts RBRACE .

    $default  reduce using rule 106 (function)


state 167

   61 call_params: call_params COMMA . value

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 190
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 168

   60 function_call: IDENTIFIER LPAREN $@2 call_params RPAREN .

    $default  reduce using rule 60 (function_call)


state 169

   63 constant: INT_VAL .

    $default  reduce using rule 63 (constant)


state 170

   64 constant: FLOAT_VAL .

    $default  reduce using rule 64 (constant)


state 171

   66 constant: CHAR_VAL .

    $default  reduce using rule 66 (constant)


state 172

   65 constant: STRING_VAL .

    $default  reduce using rule 65 (constant)


state 173

   67 constant: TRUE_VAL .

    $default  reduce using rule 67 (constant)


state 174

   68 constant: FALSE_VAL .

    $default  reduce using rule 68 (constant)


state 175

   69 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant . SEMICOLON

    SEMICOLON  shift, and go to state 191


state 176

   79 while_stmt: WHILE LPAREN expr $@3 RPAREN . LBRACE $@4 stmts RBRACE

    LBRACE  shift, and go to state 192


state 177

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr . $@12 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92

    $default  reduce using rule 90 ($@12)

    $@12  go to state 193


state 178

   70 var_dec_stmt: type IDENTIFIER . SEMICOLON
   71             | type IDENTIFIER . ASSIGN value SEMICOLON

    SEMICOLON  shift, and go to state 136
    ASSIGN     shift, and go to state 138


state 179

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   94 for_stmt: FOR $@13 LPAREN assign_stmt expr . $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92

    $default  reduce using rule 93 ($@14)

    $@14  go to state 194


state 180

   96 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE . $@15 case_stmts RBRACE

    $default  reduce using rule 95 ($@15)

    $@15  go to state 195


state 181

   82 if_stmt: IF LPAREN expr $@5 RPAREN . LBRACE $@6 stmts RBRACE

    LBRACE  shift, and go to state 196


state 182

   87 if_stmt: IF LPAREN expr $@7 RPAREN . LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

    LBRACE  shift, and go to state 197


state 183

   88 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL . LPAREN expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 198


state 184

  113 param: type IDENTIFIER .
  114      | type IDENTIFIER . ASSIGN constant

    ASSIGN  shift, and go to state 199

    $default  reduce using rule 113 (param)


state 185

  112 params: params COMMA . param

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type   go to state 159
    param  go to state 200


state 186

  107 function_prototype: VOID IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 107 (function_prototype)


state 187

   18 stmt: PRINT LPAREN value RPAREN SEMICOLON .

    $default  reduce using rule 18 (stmt)


state 188

  109 function_prototype: type IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 109 (function_prototype)


state 189

   71 var_dec_stmt: type IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 71 (var_dec_stmt)


state 190

   61 call_params: call_params COMMA value .

    $default  reduce using rule 61 (call_params)


state 191

   69 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON .

    $default  reduce using rule 69 (const_dec_stmt)


state 192

   79 while_stmt: WHILE LPAREN expr $@3 RPAREN LBRACE . $@4 stmts RBRACE

    $default  reduce using rule 78 ($@4)

    $@4  go to state 201


state 193

   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr $@12 . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 202


state 194

   94 for_stmt: FOR $@13 LPAREN assign_stmt expr $@14 . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 203


state 195

   96 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE $@15 . case_stmts RBRACE

    CASE     shift, and go to state 204
    DEFAULT  shift, and go to state 205

    case_stmts  go to state 206
    case_stmt   go to state 207


state 196

   82 if_stmt: IF LPAREN expr $@5 RPAREN LBRACE . $@6 stmts RBRACE

    $default  reduce using rule 81 ($@6)

    $@6  go to state 208


state 197

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE . $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

    $default  reduce using rule 84 ($@8)

    $@8  go to state 209


state 198

   88 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN . expr RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 210
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 199

  114 param: type IDENTIFIER ASSIGN . constant

    INT_VAL     shift, and go to state 169
    FLOAT_VAL   shift, and go to state 170
    CHAR_VAL    shift, and go to state 171
    STRING_VAL  shift, and go to state 172
    TRUE_VAL    shift, and go to state 173
    FALSE_VAL   shift, and go to state 174

    constant  go to state 211


state 200

  112 params: params COMMA param .

    $default  reduce using rule 112 (params)


state 201

   79 while_stmt: WHILE LPAREN expr $@3 RPAREN LBRACE $@4 . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 212
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 202

   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr $@12 SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 213
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 203

   94 for_stmt: FOR $@13 LPAREN assign_stmt expr $@14 SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 214
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 204

   99 case_stmt: CASE . value COLON stmts

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 215
    expr             go to state 80
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 205

  100 case_stmt: DEFAULT . COLON stmts

    COLON  shift, and go to state 216


state 206

   96 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE $@15 case_stmts . RBRACE
   97 case_stmts: case_stmts . case_stmt

    RBRACE   shift, and go to state 217
    CASE     shift, and go to state 204
    DEFAULT  shift, and go to state 205

    case_stmt  go to state 218


state 207

   98 case_stmts: case_stmt .

    $default  reduce using rule 98 (case_stmts)


state 208

   82 if_stmt: IF LPAREN expr $@5 RPAREN LBRACE $@6 . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 219
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 209

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 . stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 220
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 210

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   88 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr . RPAREN SEMICOLON

    RPAREN   shift, and go to state 221
    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92


state 211

  114 param: type IDENTIFIER ASSIGN constant .

    $default  reduce using rule 114 (param)


state 212

    1 stmts: stmts . stmt
   79 while_stmt: WHILE LPAREN expr $@3 RPAREN LBRACE $@4 stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 222
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 213

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr $@12 SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 223
    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92


state 214

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   94 for_stmt: FOR $@13 LPAREN assign_stmt expr $@14 SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 224
    LE       shift, and go to state 85
    GE       shift, and go to state 86
    NE       shift, and go to state 87
    EQUAL    shift, and go to state 88
    LESS     shift, and go to state 89
    GREATER  shift, and go to state 90
    OR       shift, and go to state 91
    AND      shift, and go to state 92


state 215

   99 case_stmt: CASE value . COLON stmts

    COLON  shift, and go to state 225


state 216

  100 case_stmt: DEFAULT COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 226
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 217

   96 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE $@15 case_stmts RBRACE .

    $default  reduce using rule 96 (switch_stmt)


state 218

   97 case_stmts: case_stmts case_stmt .

    $default  reduce using rule 97 (case_stmts)


state 219

    1 stmts: stmts . stmt
   82 if_stmt: IF LPAREN expr $@5 RPAREN LBRACE $@6 stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 227
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 220

    1 stmts: stmts . stmt
   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts . RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 228
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 221

   88 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 229


state 222

   79 while_stmt: WHILE LPAREN expr $@3 RPAREN LBRACE $@4 stmts RBRACE .

    $default  reduce using rule 79 (while_stmt)


state 223

   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr $@12 SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 230


state 224

   94 for_stmt: FOR $@13 LPAREN assign_stmt expr $@14 SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 231


state 225

   99 case_stmt: CASE value COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 232
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 226

    1 stmts: stmts . stmt
  100 case_stmt: DEFAULT COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 100 (case_stmt)

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 227

   82 if_stmt: IF LPAREN expr $@5 RPAREN LBRACE $@6 stmts RBRACE .

    $default  reduce using rule 82 (if_stmt)


state 228

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE . $@9 ELSE LBRACE $@10 stmts RBRACE

    $default  reduce using rule 85 ($@9)

    $@9  go to state 233


state 229

   88 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON .

    $default  reduce using rule 88 (repeat_until_stmt)


state 230

   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr $@12 SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 234
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 231

   94 for_stmt: FOR $@13 LPAREN assign_stmt expr $@14 SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 235
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 232

    1 stmts: stmts . stmt
   99 case_stmt: CASE value COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 99 (case_stmt)

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 233

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 . ELSE LBRACE $@10 stmts RBRACE

    ELSE  shift, and go to state 236


state 234

    1 stmts: stmts . stmt
   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr $@12 SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 237
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 235

    1 stmts: stmts . stmt
   94 for_stmt: FOR $@13 LPAREN assign_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 238
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 236

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE . LBRACE $@10 stmts RBRACE

    LBRACE  shift, and go to state 239


state 237

   91 for_stmt: FOR $@11 LPAREN var_dec_stmt expr $@12 SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 91 (for_stmt)


state 238

   94 for_stmt: FOR $@13 LPAREN assign_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 94 (for_stmt)


state 239

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE . $@10 stmts RBRACE

    $default  reduce using rule 86 ($@10)

    $@10  go to state 240


state 240

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 241
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 241

    1 stmts: stmts . stmt
   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 242
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 83
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 242

   87 if_stmt: IF LPAREN expr $@7 RPAREN LBRACE $@8 stmts RBRACE $@9 ELSE LBRACE $@10 stmts RBRACE .

    $default  reduce using rule 87 (if_stmt)
