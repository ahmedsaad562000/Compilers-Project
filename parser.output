State 61 conflicts: 1 shift/reduce
State 74 conflicts: 4 reduce/reduce
State 75 conflicts: 4 reduce/reduce
State 78 conflicts: 4 reduce/reduce
State 79 conflicts: 4 reduce/reduce


Grammar

    0 $accept: stmts $end

    1 stmts: stmts stmt
    2      | stmt

    3 stmt: expr SEMICOLON
    4     | LBRACE stmts RBRACE
    5     | const_dec_stmt
    6     | var_dec_stmt
    7     | assign_stmt
    8     | while_stmt
    9     | if_stmt
   10     | repeat_until_stmt
   11     | for_stmt
   12     | switch_stmt
   13     | function
   14     | RETURN ret_val SEMICOLON
   15     | BREAK SEMICOLON
   16     | CONTINUE SEMICOLON
   17     | PRINT LPAREN STRING RPAREN SEMICOLON

   18 ret_val: value
   19        | /* empty */

   20 value: expr
   21      | STRING_VAL
   22      | CHAR_VAL
   23      | INT_VAL
   24      | FLOAT_VAL
   25      | TRUE_VAL
   26      | FALSE_VAL

   27 expr: LPAREN expr RPAREN
   28     | bool_expr
   29     | arithmetic_expr

   30 bool_expr: expr EQUAL arithmetic_expr
   31          | expr NE arithmetic_expr
   32          | expr GREATER arithmetic_expr
   33          | expr LESS arithmetic_expr
   34          | expr GE arithmetic_expr
   35          | expr LE arithmetic_expr
   36          | expr AND expr
   37          | expr OR expr
   38          | NOT expr
   39          | TRUE_VAL
   40          | FALSE_VAL

   41 arithmetic_expr: binary_expr
   42                | unary_expr

   43 unary_expr: IDENTIFIER INC
   44           | IDENTIFIER DEC

   45 binary_expr: term
   46            | binary_expr PLUS term
   47            | binary_expr MINUS term

   48 term: negat
   49     | term MULT factor
   50     | term DIV factor
   51     | term MOD factor

   52 negat: para
   53      | MINUS para

   54 para: factor
   55     | LPAREN binary_expr RPAREN

   56 factor: INT_VAL
   57       | FLOAT_VAL
   58       | factor EXP factor
   59       | function_call
   60       | IDENTIFIER

   61 function_call: IDENTIFIER LPAREN RPAREN
   62              | IDENTIFIER LPAREN call_params RPAREN

   63 call_params: call_params COMMA value
   64            | value

   65 constant: INT_VAL
   66         | FLOAT_VAL
   67         | STRING_VAL
   68         | CHAR_VAL
   69         | TRUE_VAL
   70         | FALSE_VAL

   71 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON

   72 var_dec_stmt: type IDENTIFIER SEMICOLON
   73             | type IDENTIFIER ASSIGN value SEMICOLON

   74 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON
   75            | IDENTIFIER DIV_EQ value SEMICOLON
   76            | IDENTIFIER MULT_EQ value SEMICOLON
   77            | IDENTIFIER PLUS_EQ value SEMICOLON
   78            | IDENTIFIER MINUS_EQ value SEMICOLON

   79 while_stmt: WHILE expr LBRACE stmts RBRACE

   80 if_stmt: IF expr LBRACE stmts RBRACE
   81        | IF expr LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

   82 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL expr SEMICOLON

   83 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   84         | FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

   85 switch_stmt: SWITCH expr LBRACE case_stmts RBRACE

   86 case_stmts: case_stmts case_stmt
   87           | case_stmt

   88 case_stmt: CASE value COLON stmts
   89          | DEFAULT COLON stmts

   90 type: INT
   91     | FLOAT
   92     | CHAR
   93     | STRING
   94     | BOOL

   95 function: function_prototype LBRACE stmts RBRACE

   96 function_prototype: VOID IDENTIFIER LPAREN params RPAREN
   97                   | VOID IDENTIFIER LPAREN RPAREN
   98                   | type IDENTIFIER LPAREN params RPAREN
   99                   | type IDENTIFIER LPAREN RPAREN

  100 params: param
  101       | params COMMA param

  102 $@1: /* empty */

  103 param: type IDENTIFIER $@1 type IDENTIFIER ASSIGN constant


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 90
FLOAT (259) 91
CHAR (260) 92
BOOL (261) 94
STRING (262) 17 93
INT_VAL (263) 23 56 65
FLOAT_VAL (264) 24 57 66
CHAR_VAL (265) 22 68
STRING_VAL (266) 21 67
TRUE_VAL (267) 25 39 69
FALSE_VAL (268) 26 40 70
IDENTIFIER (269) 43 44 60 61 62 71 72 73 74 75 76 77 78 96 97 98 99
    103
CONST (270) 71
SEMICOLON (271) 3 14 15 16 17 71 72 73 74 75 76 77 78 82 83 84
COMMA (272) 63 101
LBRACE (273) 4 79 80 81 82 83 84 85 95
RBRACE (274) 4 79 80 81 82 83 84 85 95
LPAREN (275) 17 27 55 61 62 83 84 96 97 98 99
RPAREN (276) 17 27 55 61 62 83 84 96 97 98 99
BREAK (277) 15
CONTINUE (278) 16
WHILE (279) 79
FOR (280) 83 84
SWITCH (281) 85
CASE (282) 88
DEFAULT (283) 89
COLON (284) 88 89
IF (285) 80 81
ELSE (286) 81
REPEAT (287) 82
UNTIL (288) 82
LE (289) 35
GE (290) 34
NE (291) 31
EQUAL (292) 30
LESS (293) 33
GREATER (294) 32
MINUS (295) 47 53
PLUS (296) 46
MOD (297) 51
DIV (298) 50
MULT (299) 49
EXP (300) 58
OR (301) 37
AND (302) 36
NOT (303) 38
ASSIGN (304) 71 73 74 103
DIV_EQ (305) 75
PLUS_EQ (306) 77
MINUS_EQ (307) 78
MULT_EQ (308) 76
INC (309) 43
DEC (310) 44
VOID (311) 96 97
RETURN (312) 14
PRINT (313) 17


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
stmts (60)
    on left: 1 2, on right: 0 1 4 79 80 81 82 83 84 88 89 95
stmt (61)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 1 2
ret_val (62)
    on left: 18 19, on right: 14
value (63)
    on left: 20 21 22 23 24 25 26, on right: 18 63 64 73 74 75 76 77
    78 88
expr (64)
    on left: 27 28 29, on right: 3 20 27 30 31 32 33 34 35 36 37 38
    79 80 81 82 83 84 85
bool_expr (65)
    on left: 30 31 32 33 34 35 36 37 38 39 40, on right: 28
arithmetic_expr (66)
    on left: 41 42, on right: 29 30 31 32 33 34 35
unary_expr (67)
    on left: 43 44, on right: 42
binary_expr (68)
    on left: 45 46 47, on right: 41 46 47 55
term (69)
    on left: 48 49 50 51, on right: 45 46 47 49 50 51
negat (70)
    on left: 52 53, on right: 48
para (71)
    on left: 54 55, on right: 52 53
factor (72)
    on left: 56 57 58 59 60, on right: 49 50 51 54 58
function_call (73)
    on left: 61 62, on right: 59
call_params (74)
    on left: 63 64, on right: 62 63
constant (75)
    on left: 65 66 67 68 69 70, on right: 71 103
const_dec_stmt (76)
    on left: 71, on right: 5
var_dec_stmt (77)
    on left: 72 73, on right: 6 83
assign_stmt (78)
    on left: 74 75 76 77 78, on right: 7 84
while_stmt (79)
    on left: 79, on right: 8
if_stmt (80)
    on left: 80 81, on right: 9
repeat_until_stmt (81)
    on left: 82, on right: 10
for_stmt (82)
    on left: 83 84, on right: 11
switch_stmt (83)
    on left: 85, on right: 12
case_stmts (84)
    on left: 86 87, on right: 85 86
case_stmt (85)
    on left: 88 89, on right: 86 87
type (86)
    on left: 90 91 92 93 94, on right: 71 72 73 98 99 103
function (87)
    on left: 95, on right: 13
function_prototype (88)
    on left: 96 97 98 99, on right: 95
params (89)
    on left: 100 101, on right: 96 98 101
param (90)
    on left: 103, on right: 100 101
$@1 (91)
    on left: 102, on right: 103


state 0

    0 $accept: . stmts $end

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 26
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 1

   90 type: INT .

    $default  reduce using rule 90 (type)


state 2

   91 type: FLOAT .

    $default  reduce using rule 91 (type)


state 3

   92 type: CHAR .

    $default  reduce using rule 92 (type)


state 4

   94 type: BOOL .

    $default  reduce using rule 94 (type)


state 5

   93 type: STRING .

    $default  reduce using rule 93 (type)


state 6

   56 factor: INT_VAL .

    $default  reduce using rule 56 (factor)


state 7

   57 factor: FLOAT_VAL .

    $default  reduce using rule 57 (factor)


state 8

   39 bool_expr: TRUE_VAL .

    $default  reduce using rule 39 (bool_expr)


state 9

   40 bool_expr: FALSE_VAL .

    $default  reduce using rule 40 (bool_expr)


state 10

   43 unary_expr: IDENTIFIER . INC
   44           | IDENTIFIER . DEC
   60 factor: IDENTIFIER .
   61 function_call: IDENTIFIER . LPAREN RPAREN
   62              | IDENTIFIER . LPAREN call_params RPAREN
   74 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   75            | IDENTIFIER . DIV_EQ value SEMICOLON
   76            | IDENTIFIER . MULT_EQ value SEMICOLON
   77            | IDENTIFIER . PLUS_EQ value SEMICOLON
   78            | IDENTIFIER . MINUS_EQ value SEMICOLON

    LPAREN    shift, and go to state 49
    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54
    INC       shift, and go to state 55
    DEC       shift, and go to state 56

    $default  reduce using rule 60 (factor)


state 11

   71 const_dec_stmt: CONST . type IDENTIFIER ASSIGN constant SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type  go to state 57


state 12

    4 stmt: LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 58
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 13

   27 expr: LPAREN . expr RPAREN
   55 para: LPAREN . binary_expr RPAREN

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 60
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 61
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 14

   15 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 62


state 15

   16 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 16

   79 while_stmt: WHILE . expr LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 64
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 17

   83 for_stmt: FOR . LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   84         | FOR . LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LPAREN  shift, and go to state 65


state 18

   85 switch_stmt: SWITCH . expr LBRACE case_stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 66
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 19

   80 if_stmt: IF . expr LBRACE stmts RBRACE
   81        | IF . expr LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 67
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 20

   82 repeat_until_stmt: REPEAT . LBRACE stmts RBRACE UNTIL expr SEMICOLON

    LBRACE  shift, and go to state 68


state 21

   53 negat: MINUS . para

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 69
    LPAREN      shift, and go to state 70

    para           go to state 71
    factor         go to state 36
    function_call  go to state 37


state 22

   38 bool_expr: NOT . expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 72
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 23

   96 function_prototype: VOID . IDENTIFIER LPAREN params RPAREN
   97                   | VOID . IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 73


state 24

   14 stmt: RETURN . ret_val SEMICOLON

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    $default  reduce using rule 19 (ret_val)

    ret_val          go to state 80
    value            go to state 81
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 25

   17 stmt: PRINT . LPAREN STRING RPAREN SEMICOLON

    LPAREN  shift, and go to state 83


state 26

    0 $accept: stmts . $end
    1 stmts: stmts . stmt

    $end        shift, and go to state 84
    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 27

    2 stmts: stmt .

    $default  reduce using rule 2 (stmts)


state 28

    3 stmt: expr . SEMICOLON
   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr

    SEMICOLON  shift, and go to state 86
    LE         shift, and go to state 87
    GE         shift, and go to state 88
    NE         shift, and go to state 89
    EQUAL      shift, and go to state 90
    LESS       shift, and go to state 91
    GREATER    shift, and go to state 92
    OR         shift, and go to state 93
    AND        shift, and go to state 94


state 29

   28 expr: bool_expr .

    $default  reduce using rule 28 (expr)


state 30

   29 expr: arithmetic_expr .

    $default  reduce using rule 29 (expr)


state 31

   42 arithmetic_expr: unary_expr .

    $default  reduce using rule 42 (arithmetic_expr)


state 32

   41 arithmetic_expr: binary_expr .
   46 binary_expr: binary_expr . PLUS term
   47            | binary_expr . MINUS term

    MINUS  shift, and go to state 95
    PLUS   shift, and go to state 96

    $default  reduce using rule 41 (arithmetic_expr)


state 33

   45 binary_expr: term .
   49 term: term . MULT factor
   50     | term . DIV factor
   51     | term . MOD factor

    MOD   shift, and go to state 97
    DIV   shift, and go to state 98
    MULT  shift, and go to state 99

    $default  reduce using rule 45 (binary_expr)


state 34

   48 term: negat .

    $default  reduce using rule 48 (term)


state 35

   52 negat: para .

    $default  reduce using rule 52 (negat)


state 36

   54 para: factor .
   58 factor: factor . EXP factor

    EXP  shift, and go to state 100

    $default  reduce using rule 54 (para)


state 37

   59 factor: function_call .

    $default  reduce using rule 59 (factor)


state 38

    5 stmt: const_dec_stmt .

    $default  reduce using rule 5 (stmt)


state 39

    6 stmt: var_dec_stmt .

    $default  reduce using rule 6 (stmt)


state 40

    7 stmt: assign_stmt .

    $default  reduce using rule 7 (stmt)


state 41

    8 stmt: while_stmt .

    $default  reduce using rule 8 (stmt)


state 42

    9 stmt: if_stmt .

    $default  reduce using rule 9 (stmt)


state 43

   10 stmt: repeat_until_stmt .

    $default  reduce using rule 10 (stmt)


state 44

   11 stmt: for_stmt .

    $default  reduce using rule 11 (stmt)


state 45

   12 stmt: switch_stmt .

    $default  reduce using rule 12 (stmt)


state 46

   72 var_dec_stmt: type . IDENTIFIER SEMICOLON
   73             | type . IDENTIFIER ASSIGN value SEMICOLON
   98 function_prototype: type . IDENTIFIER LPAREN params RPAREN
   99                   | type . IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 101


state 47

   13 stmt: function .

    $default  reduce using rule 13 (stmt)


state 48

   95 function: function_prototype . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 102


state 49

   61 function_call: IDENTIFIER LPAREN . RPAREN
   62              | IDENTIFIER LPAREN . call_params RPAREN

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    RPAREN      shift, and go to state 103
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 104
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37
    call_params      go to state 105


state 50

   74 assign_stmt: IDENTIFIER ASSIGN . value SEMICOLON

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 106
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 51

   75 assign_stmt: IDENTIFIER DIV_EQ . value SEMICOLON

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 107
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 52

   77 assign_stmt: IDENTIFIER PLUS_EQ . value SEMICOLON

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 108
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 53

   78 assign_stmt: IDENTIFIER MINUS_EQ . value SEMICOLON

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 109
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 54

   76 assign_stmt: IDENTIFIER MULT_EQ . value SEMICOLON

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 110
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 55

   43 unary_expr: IDENTIFIER INC .

    $default  reduce using rule 43 (unary_expr)


state 56

   44 unary_expr: IDENTIFIER DEC .

    $default  reduce using rule 44 (unary_expr)


state 57

   71 const_dec_stmt: CONST type . IDENTIFIER ASSIGN constant SEMICOLON

    IDENTIFIER  shift, and go to state 111


state 58

    1 stmts: stmts . stmt
    4 stmt: LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 112
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 59

   43 unary_expr: IDENTIFIER . INC
   44           | IDENTIFIER . DEC
   60 factor: IDENTIFIER .
   61 function_call: IDENTIFIER . LPAREN RPAREN
   62              | IDENTIFIER . LPAREN call_params RPAREN

    LPAREN  shift, and go to state 49
    INC     shift, and go to state 55
    DEC     shift, and go to state 56

    $default  reduce using rule 60 (factor)


state 60

   27 expr: LPAREN expr . RPAREN
   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr

    RPAREN   shift, and go to state 113
    LE       shift, and go to state 87
    GE       shift, and go to state 88
    NE       shift, and go to state 89
    EQUAL    shift, and go to state 90
    LESS     shift, and go to state 91
    GREATER  shift, and go to state 92
    OR       shift, and go to state 93
    AND      shift, and go to state 94


state 61

   41 arithmetic_expr: binary_expr .
   46 binary_expr: binary_expr . PLUS term
   47            | binary_expr . MINUS term
   55 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 114
    MINUS   shift, and go to state 95
    PLUS    shift, and go to state 96

    RPAREN    [reduce using rule 41 (arithmetic_expr)]
    $default  reduce using rule 41 (arithmetic_expr)


state 62

   15 stmt: BREAK SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 63

   16 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 16 (stmt)


state 64

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   79 while_stmt: WHILE expr . LBRACE stmts RBRACE

    LBRACE   shift, and go to state 115
    LE       shift, and go to state 87
    GE       shift, and go to state 88
    NE       shift, and go to state 89
    EQUAL    shift, and go to state 90
    LESS     shift, and go to state 91
    GREATER  shift, and go to state 92
    OR       shift, and go to state 93
    AND      shift, and go to state 94


state 65

   83 for_stmt: FOR LPAREN . var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   84         | FOR LPAREN . assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 116

    var_dec_stmt  go to state 117
    assign_stmt   go to state 118
    type          go to state 119


state 66

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   85 switch_stmt: SWITCH expr . LBRACE case_stmts RBRACE

    LBRACE   shift, and go to state 120
    LE       shift, and go to state 87
    GE       shift, and go to state 88
    NE       shift, and go to state 89
    EQUAL    shift, and go to state 90
    LESS     shift, and go to state 91
    GREATER  shift, and go to state 92
    OR       shift, and go to state 93
    AND      shift, and go to state 94


state 67

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   80 if_stmt: IF expr . LBRACE stmts RBRACE
   81        | IF expr . LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    LBRACE   shift, and go to state 121
    LE       shift, and go to state 87
    GE       shift, and go to state 88
    NE       shift, and go to state 89
    EQUAL    shift, and go to state 90
    LESS     shift, and go to state 91
    GREATER  shift, and go to state 92
    OR       shift, and go to state 93
    AND      shift, and go to state 94


state 68

   82 repeat_until_stmt: REPEAT LBRACE . stmts RBRACE UNTIL expr SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 122
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 69

   60 factor: IDENTIFIER .
   61 function_call: IDENTIFIER . LPAREN RPAREN
   62              | IDENTIFIER . LPAREN call_params RPAREN

    LPAREN  shift, and go to state 49

    $default  reduce using rule 60 (factor)


state 70

   55 para: LPAREN . binary_expr RPAREN

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 69
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    binary_expr    go to state 123
    term           go to state 33
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 71

   53 negat: MINUS para .

    $default  reduce using rule 53 (negat)


state 72

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   38          | NOT expr .

    $default  reduce using rule 38 (bool_expr)


state 73

   96 function_prototype: VOID IDENTIFIER . LPAREN params RPAREN
   97                   | VOID IDENTIFIER . LPAREN RPAREN

    LPAREN  shift, and go to state 124


state 74

   23 value: INT_VAL .
   56 factor: INT_VAL .

    SEMICOLON  reduce using rule 23 (value)
    SEMICOLON  [reduce using rule 56 (factor)]
    COMMA      reduce using rule 23 (value)
    COMMA      [reduce using rule 56 (factor)]
    RPAREN     reduce using rule 23 (value)
    RPAREN     [reduce using rule 56 (factor)]
    COLON      reduce using rule 23 (value)
    COLON      [reduce using rule 56 (factor)]
    $default   reduce using rule 56 (factor)


state 75

   24 value: FLOAT_VAL .
   57 factor: FLOAT_VAL .

    SEMICOLON  reduce using rule 24 (value)
    SEMICOLON  [reduce using rule 57 (factor)]
    COMMA      reduce using rule 24 (value)
    COMMA      [reduce using rule 57 (factor)]
    RPAREN     reduce using rule 24 (value)
    RPAREN     [reduce using rule 57 (factor)]
    COLON      reduce using rule 24 (value)
    COLON      [reduce using rule 57 (factor)]
    $default   reduce using rule 57 (factor)


state 76

   22 value: CHAR_VAL .

    $default  reduce using rule 22 (value)


state 77

   21 value: STRING_VAL .

    $default  reduce using rule 21 (value)


state 78

   25 value: TRUE_VAL .
   39 bool_expr: TRUE_VAL .

    SEMICOLON  reduce using rule 25 (value)
    SEMICOLON  [reduce using rule 39 (bool_expr)]
    COMMA      reduce using rule 25 (value)
    COMMA      [reduce using rule 39 (bool_expr)]
    RPAREN     reduce using rule 25 (value)
    RPAREN     [reduce using rule 39 (bool_expr)]
    COLON      reduce using rule 25 (value)
    COLON      [reduce using rule 39 (bool_expr)]
    $default   reduce using rule 39 (bool_expr)


state 79

   26 value: FALSE_VAL .
   40 bool_expr: FALSE_VAL .

    SEMICOLON  reduce using rule 26 (value)
    SEMICOLON  [reduce using rule 40 (bool_expr)]
    COMMA      reduce using rule 26 (value)
    COMMA      [reduce using rule 40 (bool_expr)]
    RPAREN     reduce using rule 26 (value)
    RPAREN     [reduce using rule 40 (bool_expr)]
    COLON      reduce using rule 26 (value)
    COLON      [reduce using rule 40 (bool_expr)]
    $default   reduce using rule 40 (bool_expr)


state 80

   14 stmt: RETURN ret_val . SEMICOLON

    SEMICOLON  shift, and go to state 125


state 81

   18 ret_val: value .

    $default  reduce using rule 18 (ret_val)


state 82

   20 value: expr .
   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr

    LE       shift, and go to state 87
    GE       shift, and go to state 88
    NE       shift, and go to state 89
    EQUAL    shift, and go to state 90
    LESS     shift, and go to state 91
    GREATER  shift, and go to state 92
    OR       shift, and go to state 93
    AND      shift, and go to state 94

    $default  reduce using rule 20 (value)


state 83

   17 stmt: PRINT LPAREN . STRING RPAREN SEMICOLON

    STRING  shift, and go to state 126


state 84

    0 $accept: stmts $end .

    $default  accept


state 85

    1 stmts: stmts stmt .

    $default  reduce using rule 1 (stmts)


state 86

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


state 87

   35 bool_expr: expr LE . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 127
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 88

   34 bool_expr: expr GE . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 128
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 89

   31 bool_expr: expr NE . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 129
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 90

   30 bool_expr: expr EQUAL . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 130
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 91

   33 bool_expr: expr LESS . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 131
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 92

   32 bool_expr: expr GREATER . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 132
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 93

   37 bool_expr: expr OR . expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 133
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 94

   36 bool_expr: expr AND . expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 134
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 95

   47 binary_expr: binary_expr MINUS . term

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 69
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    term           go to state 135
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 96

   46 binary_expr: binary_expr PLUS . term

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 69
    LPAREN      shift, and go to state 70
    MINUS       shift, and go to state 21

    term           go to state 136
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 97

   51 term: term MOD . factor

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 69

    factor         go to state 137
    function_call  go to state 37


state 98

   50 term: term DIV . factor

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 69

    factor         go to state 138
    function_call  go to state 37


state 99

   49 term: term MULT . factor

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 69

    factor         go to state 139
    function_call  go to state 37


state 100

   58 factor: factor EXP . factor

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 69

    factor         go to state 140
    function_call  go to state 37


state 101

   72 var_dec_stmt: type IDENTIFIER . SEMICOLON
   73             | type IDENTIFIER . ASSIGN value SEMICOLON
   98 function_prototype: type IDENTIFIER . LPAREN params RPAREN
   99                   | type IDENTIFIER . LPAREN RPAREN

    SEMICOLON  shift, and go to state 141
    LPAREN     shift, and go to state 142
    ASSIGN     shift, and go to state 143


state 102

   95 function: function_prototype LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 144
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 103

   61 function_call: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 61 (function_call)


state 104

   64 call_params: value .

    $default  reduce using rule 64 (call_params)


state 105

   62 function_call: IDENTIFIER LPAREN call_params . RPAREN
   63 call_params: call_params . COMMA value

    COMMA   shift, and go to state 145
    RPAREN  shift, and go to state 146


state 106

   74 assign_stmt: IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 107

   75 assign_stmt: IDENTIFIER DIV_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 148


state 108

   77 assign_stmt: IDENTIFIER PLUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 149


state 109

   78 assign_stmt: IDENTIFIER MINUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 150


state 110

   76 assign_stmt: IDENTIFIER MULT_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 151


state 111

   71 const_dec_stmt: CONST type IDENTIFIER . ASSIGN constant SEMICOLON

    ASSIGN  shift, and go to state 152


state 112

    4 stmt: LBRACE stmts RBRACE .

    $default  reduce using rule 4 (stmt)


state 113

   27 expr: LPAREN expr RPAREN .

    $default  reduce using rule 27 (expr)


state 114

   55 para: LPAREN binary_expr RPAREN .

    $default  reduce using rule 55 (para)


state 115

   79 while_stmt: WHILE expr LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 153
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 116

   74 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   75            | IDENTIFIER . DIV_EQ value SEMICOLON
   76            | IDENTIFIER . MULT_EQ value SEMICOLON
   77            | IDENTIFIER . PLUS_EQ value SEMICOLON
   78            | IDENTIFIER . MINUS_EQ value SEMICOLON

    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54


state 117

   83 for_stmt: FOR LPAREN var_dec_stmt . expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 154
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 118

   84 for_stmt: FOR LPAREN assign_stmt . expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 155
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 119

   72 var_dec_stmt: type . IDENTIFIER SEMICOLON
   73             | type . IDENTIFIER ASSIGN value SEMICOLON

    IDENTIFIER  shift, and go to state 156


state 120

   85 switch_stmt: SWITCH expr LBRACE . case_stmts RBRACE

    CASE     shift, and go to state 157
    DEFAULT  shift, and go to state 158

    case_stmts  go to state 159
    case_stmt   go to state 160


state 121

   80 if_stmt: IF expr LBRACE . stmts RBRACE
   81        | IF expr LBRACE . stmts RBRACE ELSE LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 161
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 122

    1 stmts: stmts . stmt
   82 repeat_until_stmt: REPEAT LBRACE stmts . RBRACE UNTIL expr SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 162
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 123

   46 binary_expr: binary_expr . PLUS term
   47            | binary_expr . MINUS term
   55 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 114
    MINUS   shift, and go to state 95
    PLUS    shift, and go to state 96


state 124

   96 function_prototype: VOID IDENTIFIER LPAREN . params RPAREN
   97                   | VOID IDENTIFIER LPAREN . RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    RPAREN  shift, and go to state 163

    type    go to state 164
    params  go to state 165
    param   go to state 166


state 125

   14 stmt: RETURN ret_val SEMICOLON .

    $default  reduce using rule 14 (stmt)


state 126

   17 stmt: PRINT LPAREN STRING . RPAREN SEMICOLON

    RPAREN  shift, and go to state 167


state 127

   35 bool_expr: expr LE arithmetic_expr .

    $default  reduce using rule 35 (bool_expr)


state 128

   34 bool_expr: expr GE arithmetic_expr .

    $default  reduce using rule 34 (bool_expr)


state 129

   31 bool_expr: expr NE arithmetic_expr .

    $default  reduce using rule 31 (bool_expr)


state 130

   30 bool_expr: expr EQUAL arithmetic_expr .

    $default  reduce using rule 30 (bool_expr)


state 131

   33 bool_expr: expr LESS arithmetic_expr .

    $default  reduce using rule 33 (bool_expr)


state 132

   32 bool_expr: expr GREATER arithmetic_expr .

    $default  reduce using rule 32 (bool_expr)


state 133

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   37          | expr OR expr .

    $default  reduce using rule 37 (bool_expr)


state 134

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   36          | expr AND expr .
   37          | expr . OR expr

    $default  reduce using rule 36 (bool_expr)


state 135

   47 binary_expr: binary_expr MINUS term .
   49 term: term . MULT factor
   50     | term . DIV factor
   51     | term . MOD factor

    MOD   shift, and go to state 97
    DIV   shift, and go to state 98
    MULT  shift, and go to state 99

    $default  reduce using rule 47 (binary_expr)


state 136

   46 binary_expr: binary_expr PLUS term .
   49 term: term . MULT factor
   50     | term . DIV factor
   51     | term . MOD factor

    MOD   shift, and go to state 97
    DIV   shift, and go to state 98
    MULT  shift, and go to state 99

    $default  reduce using rule 46 (binary_expr)


state 137

   51 term: term MOD factor .
   58 factor: factor . EXP factor

    EXP  shift, and go to state 100

    $default  reduce using rule 51 (term)


state 138

   50 term: term DIV factor .
   58 factor: factor . EXP factor

    EXP  shift, and go to state 100

    $default  reduce using rule 50 (term)


state 139

   49 term: term MULT factor .
   58 factor: factor . EXP factor

    EXP  shift, and go to state 100

    $default  reduce using rule 49 (term)


state 140

   58 factor: factor . EXP factor
   58       | factor EXP factor .

    $default  reduce using rule 58 (factor)


state 141

   72 var_dec_stmt: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 72 (var_dec_stmt)


state 142

   98 function_prototype: type IDENTIFIER LPAREN . params RPAREN
   99                   | type IDENTIFIER LPAREN . RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    RPAREN  shift, and go to state 168

    type    go to state 164
    params  go to state 169
    param   go to state 166


state 143

   73 var_dec_stmt: type IDENTIFIER ASSIGN . value SEMICOLON

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 170
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 144

    1 stmts: stmts . stmt
   95 function: function_prototype LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 171
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 145

   63 call_params: call_params COMMA . value

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 172
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 146

   62 function_call: IDENTIFIER LPAREN call_params RPAREN .

    $default  reduce using rule 62 (function_call)


state 147

   74 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 74 (assign_stmt)


state 148

   75 assign_stmt: IDENTIFIER DIV_EQ value SEMICOLON .

    $default  reduce using rule 75 (assign_stmt)


state 149

   77 assign_stmt: IDENTIFIER PLUS_EQ value SEMICOLON .

    $default  reduce using rule 77 (assign_stmt)


state 150

   78 assign_stmt: IDENTIFIER MINUS_EQ value SEMICOLON .

    $default  reduce using rule 78 (assign_stmt)


state 151

   76 assign_stmt: IDENTIFIER MULT_EQ value SEMICOLON .

    $default  reduce using rule 76 (assign_stmt)


state 152

   71 const_dec_stmt: CONST type IDENTIFIER ASSIGN . constant SEMICOLON

    INT_VAL     shift, and go to state 173
    FLOAT_VAL   shift, and go to state 174
    CHAR_VAL    shift, and go to state 175
    STRING_VAL  shift, and go to state 176
    TRUE_VAL    shift, and go to state 177
    FALSE_VAL   shift, and go to state 178

    constant  go to state 179


state 153

    1 stmts: stmts . stmt
   79 while_stmt: WHILE expr LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 180
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 154

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   83 for_stmt: FOR LPAREN var_dec_stmt expr . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 181
    LE         shift, and go to state 87
    GE         shift, and go to state 88
    NE         shift, and go to state 89
    EQUAL      shift, and go to state 90
    LESS       shift, and go to state 91
    GREATER    shift, and go to state 92
    OR         shift, and go to state 93
    AND        shift, and go to state 94


state 155

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   84 for_stmt: FOR LPAREN assign_stmt expr . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 182
    LE         shift, and go to state 87
    GE         shift, and go to state 88
    NE         shift, and go to state 89
    EQUAL      shift, and go to state 90
    LESS       shift, and go to state 91
    GREATER    shift, and go to state 92
    OR         shift, and go to state 93
    AND        shift, and go to state 94


state 156

   72 var_dec_stmt: type IDENTIFIER . SEMICOLON
   73             | type IDENTIFIER . ASSIGN value SEMICOLON

    SEMICOLON  shift, and go to state 141
    ASSIGN     shift, and go to state 143


state 157

   88 case_stmt: CASE . value COLON stmts

    INT_VAL     shift, and go to state 74
    FLOAT_VAL   shift, and go to state 75
    CHAR_VAL    shift, and go to state 76
    STRING_VAL  shift, and go to state 77
    TRUE_VAL    shift, and go to state 78
    FALSE_VAL   shift, and go to state 79
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 183
    expr             go to state 82
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 158

   89 case_stmt: DEFAULT . COLON stmts

    COLON  shift, and go to state 184


state 159

   85 switch_stmt: SWITCH expr LBRACE case_stmts . RBRACE
   86 case_stmts: case_stmts . case_stmt

    RBRACE   shift, and go to state 185
    CASE     shift, and go to state 157
    DEFAULT  shift, and go to state 158

    case_stmt  go to state 186


state 160

   87 case_stmts: case_stmt .

    $default  reduce using rule 87 (case_stmts)


state 161

    1 stmts: stmts . stmt
   80 if_stmt: IF expr LBRACE stmts . RBRACE
   81        | IF expr LBRACE stmts . RBRACE ELSE LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 187
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 162

   82 repeat_until_stmt: REPEAT LBRACE stmts RBRACE . UNTIL expr SEMICOLON

    UNTIL  shift, and go to state 188


state 163

   97 function_prototype: VOID IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 97 (function_prototype)


state 164

  103 param: type . IDENTIFIER $@1 type IDENTIFIER ASSIGN constant

    IDENTIFIER  shift, and go to state 189


state 165

   96 function_prototype: VOID IDENTIFIER LPAREN params . RPAREN
  101 params: params . COMMA param

    COMMA   shift, and go to state 190
    RPAREN  shift, and go to state 191


state 166

  100 params: param .

    $default  reduce using rule 100 (params)


state 167

   17 stmt: PRINT LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 192


state 168

   99 function_prototype: type IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 99 (function_prototype)


state 169

   98 function_prototype: type IDENTIFIER LPAREN params . RPAREN
  101 params: params . COMMA param

    COMMA   shift, and go to state 190
    RPAREN  shift, and go to state 193


state 170

   73 var_dec_stmt: type IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 194


state 171

   95 function: function_prototype LBRACE stmts RBRACE .

    $default  reduce using rule 95 (function)


state 172

   63 call_params: call_params COMMA value .

    $default  reduce using rule 63 (call_params)


state 173

   65 constant: INT_VAL .

    $default  reduce using rule 65 (constant)


state 174

   66 constant: FLOAT_VAL .

    $default  reduce using rule 66 (constant)


state 175

   68 constant: CHAR_VAL .

    $default  reduce using rule 68 (constant)


state 176

   67 constant: STRING_VAL .

    $default  reduce using rule 67 (constant)


state 177

   69 constant: TRUE_VAL .

    $default  reduce using rule 69 (constant)


state 178

   70 constant: FALSE_VAL .

    $default  reduce using rule 70 (constant)


state 179

   71 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant . SEMICOLON

    SEMICOLON  shift, and go to state 195


state 180

   79 while_stmt: WHILE expr LBRACE stmts RBRACE .

    $default  reduce using rule 79 (while_stmt)


state 181

   83 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 196
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 182

   84 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 197
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 183

   88 case_stmt: CASE value . COLON stmts

    COLON  shift, and go to state 198


state 184

   89 case_stmt: DEFAULT COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 199
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 185

   85 switch_stmt: SWITCH expr LBRACE case_stmts RBRACE .

    $default  reduce using rule 85 (switch_stmt)


state 186

   86 case_stmts: case_stmts case_stmt .

    $default  reduce using rule 86 (case_stmts)


state 187

   80 if_stmt: IF expr LBRACE stmts RBRACE .
   81        | IF expr LBRACE stmts RBRACE . ELSE LBRACE stmts RBRACE

    ELSE  shift, and go to state 200

    $default  reduce using rule 80 (if_stmt)


state 188

   82 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL . expr SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 201
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 189

  103 param: type IDENTIFIER . $@1 type IDENTIFIER ASSIGN constant

    $default  reduce using rule 102 ($@1)

    $@1  go to state 202


state 190

  101 params: params COMMA . param

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type   go to state 164
    param  go to state 203


state 191

   96 function_prototype: VOID IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 96 (function_prototype)


state 192

   17 stmt: PRINT LPAREN STRING RPAREN SEMICOLON .

    $default  reduce using rule 17 (stmt)


state 193

   98 function_prototype: type IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 98 (function_prototype)


state 194

   73 var_dec_stmt: type IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 73 (var_dec_stmt)


state 195

   71 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON .

    $default  reduce using rule 71 (const_dec_stmt)


state 196

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   83 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 204
    LE       shift, and go to state 87
    GE       shift, and go to state 88
    NE       shift, and go to state 89
    EQUAL    shift, and go to state 90
    LESS     shift, and go to state 91
    GREATER  shift, and go to state 92
    OR       shift, and go to state 93
    AND      shift, and go to state 94


state 197

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   84 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 205
    LE       shift, and go to state 87
    GE       shift, and go to state 88
    NE       shift, and go to state 89
    EQUAL    shift, and go to state 90
    LESS     shift, and go to state 91
    GREATER  shift, and go to state 92
    OR       shift, and go to state 93
    AND      shift, and go to state 94


state 198

   88 case_stmt: CASE value COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 206
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 199

    1 stmts: stmts . stmt
   89 case_stmt: DEFAULT COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 89 (case_stmt)

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 200

   81 if_stmt: IF expr LBRACE stmts RBRACE ELSE . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 207


state 201

   30 bool_expr: expr . EQUAL arithmetic_expr
   31          | expr . NE arithmetic_expr
   32          | expr . GREATER arithmetic_expr
   33          | expr . LESS arithmetic_expr
   34          | expr . GE arithmetic_expr
   35          | expr . LE arithmetic_expr
   36          | expr . AND expr
   37          | expr . OR expr
   82 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL expr . SEMICOLON

    SEMICOLON  shift, and go to state 208
    LE         shift, and go to state 87
    GE         shift, and go to state 88
    NE         shift, and go to state 89
    EQUAL      shift, and go to state 90
    LESS       shift, and go to state 91
    GREATER    shift, and go to state 92
    OR         shift, and go to state 93
    AND        shift, and go to state 94


state 202

  103 param: type IDENTIFIER $@1 . type IDENTIFIER ASSIGN constant

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type  go to state 209


state 203

  101 params: params COMMA param .

    $default  reduce using rule 101 (params)


state 204

   83 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 210


state 205

   84 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 211


state 206

    1 stmts: stmts . stmt
   88 case_stmt: CASE value COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 88 (case_stmt)

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 207

   81 if_stmt: IF expr LBRACE stmts RBRACE ELSE LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 212
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 208

   82 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL expr SEMICOLON .

    $default  reduce using rule 82 (repeat_until_stmt)


state 209

  103 param: type IDENTIFIER $@1 type . IDENTIFIER ASSIGN constant

    IDENTIFIER  shift, and go to state 213


state 210

   83 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 214
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 211

   84 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 215
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 212

    1 stmts: stmts . stmt
   81 if_stmt: IF expr LBRACE stmts RBRACE ELSE LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 216
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 213

  103 param: type IDENTIFIER $@1 type IDENTIFIER . ASSIGN constant

    ASSIGN  shift, and go to state 217


state 214

    1 stmts: stmts . stmt
   83 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 218
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 215

    1 stmts: stmts . stmt
   84 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 219
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 85
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 216

   81 if_stmt: IF expr LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE .

    $default  reduce using rule 81 (if_stmt)


state 217

  103 param: type IDENTIFIER $@1 type IDENTIFIER ASSIGN . constant

    INT_VAL     shift, and go to state 173
    FLOAT_VAL   shift, and go to state 174
    CHAR_VAL    shift, and go to state 175
    STRING_VAL  shift, and go to state 176
    TRUE_VAL    shift, and go to state 177
    FALSE_VAL   shift, and go to state 178

    constant  go to state 220


state 218

   83 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 83 (for_stmt)


state 219

   84 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 84 (for_stmt)


state 220

  103 param: type IDENTIFIER $@1 type IDENTIFIER ASSIGN constant .

    $default  reduce using rule 103 (param)
