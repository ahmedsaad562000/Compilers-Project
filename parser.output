Grammar

    0 $accept: stmts $end

    1 stmts: stmts stmt
    2      | stmt

    3 stmt: expr SEMICOLON

    4 $@1: /* empty */

    5 stmt: LBRACE $@1 stmts RBRACE
    6     | const_dec_stmt
    7     | var_dec_stmt
    8     | assign_stmt
    9     | while_stmt
   10     | if_stmt
   11     | repeat_until_stmt
   12     | for_stmt
   13     | switch_stmt
   14     | function
   15     | RETURN ret_val SEMICOLON
   16     | BREAK SEMICOLON
   17     | CONTINUE SEMICOLON
   18     | PRINT LPAREN value RPAREN SEMICOLON

   19 ret_val: value
   20        | /* empty */

   21 value: expr
   22      | STRING_VAL
   23      | CHAR_VAL

   24 expr: bool_expr
   25     | arithmetic_expr

   26 bool_expr: expr EQUAL arithmetic_expr
   27          | expr NE arithmetic_expr
   28          | expr GREATER arithmetic_expr
   29          | expr LESS arithmetic_expr
   30          | expr GE arithmetic_expr
   31          | expr LE arithmetic_expr
   32          | expr AND expr
   33          | expr OR expr
   34          | NOT expr
   35          | LPAREN bool_expr RPAREN
   36          | TRUE_VAL
   37          | FALSE_VAL

   38 arithmetic_expr: binary_expr
   39                | unary_expr

   40 unary_expr: IDENTIFIER INC
   41           | IDENTIFIER DEC

   42 binary_expr: term
   43            | binary_expr PLUS term
   44            | binary_expr MINUS term

   45 term: negat
   46     | term MULT factor
   47     | term DIV factor
   48     | term MOD factor

   49 negat: para
   50      | MINUS para

   51 para: factor
   52     | LPAREN binary_expr RPAREN

   53 factor: INT_VAL
   54       | FLOAT_VAL
   55       | factor EXP factor
   56       | function_call
   57       | IDENTIFIER

   58 function_call: IDENTIFIER LPAREN RPAREN
   59              | IDENTIFIER LPAREN call_params RPAREN

   60 call_params: call_params COMMA value
   61            | value

   62 constant: INT_VAL
   63         | FLOAT_VAL
   64         | STRING_VAL
   65         | CHAR_VAL
   66         | TRUE_VAL
   67         | FALSE_VAL

   68 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON

   69 var_dec_stmt: type IDENTIFIER SEMICOLON
   70             | type IDENTIFIER ASSIGN value SEMICOLON

   71 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON
   72            | IDENTIFIER DIV_EQ value SEMICOLON
   73            | IDENTIFIER MULT_EQ value SEMICOLON
   74            | IDENTIFIER PLUS_EQ value SEMICOLON
   75            | IDENTIFIER MINUS_EQ value SEMICOLON

   76 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmts RBRACE

   77 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE
   78        | IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

   79 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

   80 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   81         | FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

   82 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE case_stmts RBRACE

   83 case_stmts: case_stmts case_stmt
   84           | case_stmt

   85 case_stmt: CASE value COLON stmts
   86          | DEFAULT COLON stmts

   87 type: INT
   88     | FLOAT
   89     | CHAR
   90     | STRING
   91     | BOOL

   92 function: function_prototype LBRACE stmts RBRACE

   93 function_prototype: VOID IDENTIFIER LPAREN params RPAREN
   94                   | VOID IDENTIFIER LPAREN RPAREN
   95                   | type IDENTIFIER LPAREN params RPAREN
   96                   | type IDENTIFIER LPAREN RPAREN

   97 params: param
   98       | params COMMA param

   99 param: type IDENTIFIER
  100      | type IDENTIFIER ASSIGN constant


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 87
FLOAT (259) 88
CHAR (260) 89
BOOL (261) 91
STRING (262) 90
IDENTIFIER (263) 40 41 57 58 59 68 69 70 71 72 73 74 75 93 94 95 96
    99 100
INT_VAL (264) 53 62
FLOAT_VAL (265) 54 63
CHAR_VAL (266) 23 65
STRING_VAL (267) 22 64
TRUE_VAL (268) 36 66
FALSE_VAL (269) 37 67
CONST (270) 68
SEMICOLON (271) 3 15 16 17 18 68 69 70 71 72 73 74 75 79 80 81
COMMA (272) 60 98
LBRACE (273) 5 76 77 78 79 80 81 82 92
RBRACE (274) 5 76 77 78 79 80 81 82 92
LPAREN (275) 18 35 52 58 59 76 77 78 79 80 81 82 93 94 95 96
RPAREN (276) 18 35 52 58 59 76 77 78 79 80 81 82 93 94 95 96
BREAK (277) 16
CONTINUE (278) 17
WHILE (279) 76
FOR (280) 80 81
SWITCH (281) 82
CASE (282) 85
DEFAULT (283) 86
COLON (284) 85 86
IF (285) 77 78
ELSE (286) 78
REPEAT (287) 79
UNTIL (288) 79
LE (289) 31
GE (290) 30
NE (291) 27
EQUAL (292) 26
LESS (293) 29
GREATER (294) 28
MINUS (295) 44 50
PLUS (296) 43
MOD (297) 48
DIV (298) 47
MULT (299) 46
EXP (300) 55
OR (301) 33
AND (302) 32
NOT (303) 34
ASSIGN (304) 68 70 71 100
DIV_EQ (305) 72
PLUS_EQ (306) 74
MINUS_EQ (307) 75
MULT_EQ (308) 73
INC (309) 40
DEC (310) 41
UMINUS (311)
VOID (312) 93 94
RETURN (313) 15
PRINT (314) 18


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
stmts (61)
    on left: 1 2, on right: 0 1 5 76 77 78 79 80 81 85 86 92
stmt (62)
    on left: 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 1 2
$@1 (63)
    on left: 4, on right: 5
ret_val (64)
    on left: 19 20, on right: 15
value (65)
    on left: 21 22 23, on right: 18 19 60 61 70 71 72 73 74 75 85
expr (66)
    on left: 24 25, on right: 3 21 26 27 28 29 30 31 32 33 34 76 77
    78 79 80 81 82
bool_expr (67)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37, on right: 24 35
arithmetic_expr (68)
    on left: 38 39, on right: 25 26 27 28 29 30 31
unary_expr (69)
    on left: 40 41, on right: 39
binary_expr (70)
    on left: 42 43 44, on right: 38 43 44 52
term (71)
    on left: 45 46 47 48, on right: 42 43 44 46 47 48
negat (72)
    on left: 49 50, on right: 45
para (73)
    on left: 51 52, on right: 49 50
factor (74)
    on left: 53 54 55 56 57, on right: 46 47 48 51 55
function_call (75)
    on left: 58 59, on right: 56
call_params (76)
    on left: 60 61, on right: 59 60
constant (77)
    on left: 62 63 64 65 66 67, on right: 68 100
const_dec_stmt (78)
    on left: 68, on right: 6
var_dec_stmt (79)
    on left: 69 70, on right: 7 80
assign_stmt (80)
    on left: 71 72 73 74 75, on right: 8 81
while_stmt (81)
    on left: 76, on right: 9
if_stmt (82)
    on left: 77 78, on right: 10
repeat_until_stmt (83)
    on left: 79, on right: 11
for_stmt (84)
    on left: 80 81, on right: 12
switch_stmt (85)
    on left: 82, on right: 13
case_stmts (86)
    on left: 83 84, on right: 82 83
case_stmt (87)
    on left: 85 86, on right: 83 84
type (88)
    on left: 87 88 89 90 91, on right: 68 69 70 95 96 99 100
function (89)
    on left: 92, on right: 14
function_prototype (90)
    on left: 93 94 95 96, on right: 92
params (91)
    on left: 97 98, on right: 93 95 98
param (92)
    on left: 99 100, on right: 97 98


state 0

    0 $accept: . stmts $end

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 26
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 1

   87 type: INT .

    $default  reduce using rule 87 (type)


state 2

   88 type: FLOAT .

    $default  reduce using rule 88 (type)


state 3

   89 type: CHAR .

    $default  reduce using rule 89 (type)


state 4

   91 type: BOOL .

    $default  reduce using rule 91 (type)


state 5

   90 type: STRING .

    $default  reduce using rule 90 (type)


state 6

   40 unary_expr: IDENTIFIER . INC
   41           | IDENTIFIER . DEC
   57 factor: IDENTIFIER .
   58 function_call: IDENTIFIER . LPAREN RPAREN
   59              | IDENTIFIER . LPAREN call_params RPAREN
   71 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   72            | IDENTIFIER . DIV_EQ value SEMICOLON
   73            | IDENTIFIER . MULT_EQ value SEMICOLON
   74            | IDENTIFIER . PLUS_EQ value SEMICOLON
   75            | IDENTIFIER . MINUS_EQ value SEMICOLON

    LPAREN    shift, and go to state 49
    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54
    INC       shift, and go to state 55
    DEC       shift, and go to state 56

    $default  reduce using rule 57 (factor)


state 7

   53 factor: INT_VAL .

    $default  reduce using rule 53 (factor)


state 8

   54 factor: FLOAT_VAL .

    $default  reduce using rule 54 (factor)


state 9

   36 bool_expr: TRUE_VAL .

    $default  reduce using rule 36 (bool_expr)


state 10

   37 bool_expr: FALSE_VAL .

    $default  reduce using rule 37 (bool_expr)


state 11

   68 const_dec_stmt: CONST . type IDENTIFIER ASSIGN constant SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type  go to state 57


state 12

    5 stmt: LBRACE . $@1 stmts RBRACE

    $default  reduce using rule 4 ($@1)

    $@1  go to state 58


state 13

   35 bool_expr: LPAREN . bool_expr RPAREN
   52 para: LPAREN . binary_expr RPAREN

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 60
    bool_expr        go to state 61
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 62
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 14

   16 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 15

   17 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 64


state 16

   76 while_stmt: WHILE . LPAREN expr RPAREN LBRACE stmts RBRACE

    LPAREN  shift, and go to state 65


state 17

   80 for_stmt: FOR . LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   81         | FOR . LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LPAREN  shift, and go to state 66


state 18

   82 switch_stmt: SWITCH . LPAREN expr RPAREN LBRACE case_stmts RBRACE

    LPAREN  shift, and go to state 67


state 19

   77 if_stmt: IF . LPAREN expr RPAREN LBRACE stmts RBRACE
   78        | IF . LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    LPAREN  shift, and go to state 68


state 20

   79 repeat_until_stmt: REPEAT . LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    LBRACE  shift, and go to state 69


state 21

   50 negat: MINUS . para

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71

    para           go to state 72
    factor         go to state 36
    function_call  go to state 37


state 22

   34 bool_expr: NOT . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 73
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 23

   93 function_prototype: VOID . IDENTIFIER LPAREN params RPAREN
   94                   | VOID . IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 74


state 24

   15 stmt: RETURN . ret_val SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    $default  reduce using rule 20 (ret_val)

    ret_val          go to state 77
    value            go to state 78
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 25

   18 stmt: PRINT . LPAREN value RPAREN SEMICOLON

    LPAREN  shift, and go to state 80


state 26

    0 $accept: stmts . $end
    1 stmts: stmts . stmt

    $end        shift, and go to state 81
    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 27

    2 stmts: stmt .

    $default  reduce using rule 2 (stmts)


state 28

    3 stmt: expr . SEMICOLON
   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    SEMICOLON  shift, and go to state 83
    LE         shift, and go to state 84
    GE         shift, and go to state 85
    NE         shift, and go to state 86
    EQUAL      shift, and go to state 87
    LESS       shift, and go to state 88
    GREATER    shift, and go to state 89
    OR         shift, and go to state 90
    AND        shift, and go to state 91


state 29

   24 expr: bool_expr .

    $default  reduce using rule 24 (expr)


state 30

   25 expr: arithmetic_expr .

    $default  reduce using rule 25 (expr)


state 31

   39 arithmetic_expr: unary_expr .

    $default  reduce using rule 39 (arithmetic_expr)


state 32

   38 arithmetic_expr: binary_expr .
   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term

    MINUS  shift, and go to state 92
    PLUS   shift, and go to state 93

    $default  reduce using rule 38 (arithmetic_expr)


state 33

   42 binary_expr: term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 42 (binary_expr)


state 34

   45 term: negat .

    $default  reduce using rule 45 (term)


state 35

   49 negat: para .

    $default  reduce using rule 49 (negat)


state 36

   51 para: factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 51 (para)


state 37

   56 factor: function_call .

    $default  reduce using rule 56 (factor)


state 38

    6 stmt: const_dec_stmt .

    $default  reduce using rule 6 (stmt)


state 39

    7 stmt: var_dec_stmt .

    $default  reduce using rule 7 (stmt)


state 40

    8 stmt: assign_stmt .

    $default  reduce using rule 8 (stmt)


state 41

    9 stmt: while_stmt .

    $default  reduce using rule 9 (stmt)


state 42

   10 stmt: if_stmt .

    $default  reduce using rule 10 (stmt)


state 43

   11 stmt: repeat_until_stmt .

    $default  reduce using rule 11 (stmt)


state 44

   12 stmt: for_stmt .

    $default  reduce using rule 12 (stmt)


state 45

   13 stmt: switch_stmt .

    $default  reduce using rule 13 (stmt)


state 46

   69 var_dec_stmt: type . IDENTIFIER SEMICOLON
   70             | type . IDENTIFIER ASSIGN value SEMICOLON
   95 function_prototype: type . IDENTIFIER LPAREN params RPAREN
   96                   | type . IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 98


state 47

   14 stmt: function .

    $default  reduce using rule 14 (stmt)


state 48

   92 function: function_prototype . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 99


state 49

   58 function_call: IDENTIFIER LPAREN . RPAREN
   59              | IDENTIFIER LPAREN . call_params RPAREN

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    RPAREN      shift, and go to state 100
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 101
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37
    call_params      go to state 102


state 50

   71 assign_stmt: IDENTIFIER ASSIGN . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 103
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 51

   72 assign_stmt: IDENTIFIER DIV_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 104
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 52

   74 assign_stmt: IDENTIFIER PLUS_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 105
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 53

   75 assign_stmt: IDENTIFIER MINUS_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 106
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 54

   73 assign_stmt: IDENTIFIER MULT_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 107
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 55

   40 unary_expr: IDENTIFIER INC .

    $default  reduce using rule 40 (unary_expr)


state 56

   41 unary_expr: IDENTIFIER DEC .

    $default  reduce using rule 41 (unary_expr)


state 57

   68 const_dec_stmt: CONST type . IDENTIFIER ASSIGN constant SEMICOLON

    IDENTIFIER  shift, and go to state 108


state 58

    5 stmt: LBRACE $@1 . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 109
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 59

   40 unary_expr: IDENTIFIER . INC
   41           | IDENTIFIER . DEC
   57 factor: IDENTIFIER .
   58 function_call: IDENTIFIER . LPAREN RPAREN
   59              | IDENTIFIER . LPAREN call_params RPAREN

    LPAREN  shift, and go to state 49
    INC     shift, and go to state 55
    DEC     shift, and go to state 56

    $default  reduce using rule 57 (factor)


state 60

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 61

   24 expr: bool_expr .
   35 bool_expr: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 110

    $default  reduce using rule 24 (expr)


state 62

   38 arithmetic_expr: binary_expr .
   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term
   52 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 111
    MINUS   shift, and go to state 92
    PLUS    shift, and go to state 93

    $default  reduce using rule 38 (arithmetic_expr)


state 63

   16 stmt: BREAK SEMICOLON .

    $default  reduce using rule 16 (stmt)


state 64

   17 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 17 (stmt)


state 65

   76 while_stmt: WHILE LPAREN . expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 112
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 66

   80 for_stmt: FOR LPAREN . var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   81         | FOR LPAREN . assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 113

    var_dec_stmt  go to state 114
    assign_stmt   go to state 115
    type          go to state 116


state 67

   82 switch_stmt: SWITCH LPAREN . expr RPAREN LBRACE case_stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 117
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 68

   77 if_stmt: IF LPAREN . expr RPAREN LBRACE stmts RBRACE
   78        | IF LPAREN . expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 118
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 69

   79 repeat_until_stmt: REPEAT LBRACE . stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 119
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 70

   57 factor: IDENTIFIER .
   58 function_call: IDENTIFIER . LPAREN RPAREN
   59              | IDENTIFIER . LPAREN call_params RPAREN

    LPAREN  shift, and go to state 49

    $default  reduce using rule 57 (factor)


state 71

   52 para: LPAREN . binary_expr RPAREN

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    binary_expr    go to state 120
    term           go to state 33
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 72

   50 negat: MINUS para .

    $default  reduce using rule 50 (negat)


state 73

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   34          | NOT expr .

    $default  reduce using rule 34 (bool_expr)


state 74

   93 function_prototype: VOID IDENTIFIER . LPAREN params RPAREN
   94                   | VOID IDENTIFIER . LPAREN RPAREN

    LPAREN  shift, and go to state 121


state 75

   23 value: CHAR_VAL .

    $default  reduce using rule 23 (value)


state 76

   22 value: STRING_VAL .

    $default  reduce using rule 22 (value)


state 77

   15 stmt: RETURN ret_val . SEMICOLON

    SEMICOLON  shift, and go to state 122


state 78

   19 ret_val: value .

    $default  reduce using rule 19 (ret_val)


state 79

   21 value: expr .
   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91

    $default  reduce using rule 21 (value)


state 80

   18 stmt: PRINT LPAREN . value RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 123
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 81

    0 $accept: stmts $end .

    $default  accept


state 82

    1 stmts: stmts stmt .

    $default  reduce using rule 1 (stmts)


state 83

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


state 84

   31 bool_expr: expr LE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 124
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 85

   30 bool_expr: expr GE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 125
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 86

   27 bool_expr: expr NE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 126
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 87

   26 bool_expr: expr EQUAL . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 127
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 88

   29 bool_expr: expr LESS . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 128
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 89

   28 bool_expr: expr GREATER . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 129
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 90

   33 bool_expr: expr OR . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 130
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 91

   32 bool_expr: expr AND . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 131
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 92

   44 binary_expr: binary_expr MINUS . term

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    term           go to state 132
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 93

   43 binary_expr: binary_expr PLUS . term

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    term           go to state 133
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 94

   48 term: term MOD . factor

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 134
    function_call  go to state 37


state 95

   47 term: term DIV . factor

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 135
    function_call  go to state 37


state 96

   46 term: term MULT . factor

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 136
    function_call  go to state 37


state 97

   55 factor: factor EXP . factor

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 137
    function_call  go to state 37


state 98

   69 var_dec_stmt: type IDENTIFIER . SEMICOLON
   70             | type IDENTIFIER . ASSIGN value SEMICOLON
   95 function_prototype: type IDENTIFIER . LPAREN params RPAREN
   96                   | type IDENTIFIER . LPAREN RPAREN

    SEMICOLON  shift, and go to state 138
    LPAREN     shift, and go to state 139
    ASSIGN     shift, and go to state 140


state 99

   92 function: function_prototype LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 141
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 100

   58 function_call: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 58 (function_call)


state 101

   61 call_params: value .

    $default  reduce using rule 61 (call_params)


state 102

   59 function_call: IDENTIFIER LPAREN call_params . RPAREN
   60 call_params: call_params . COMMA value

    COMMA   shift, and go to state 142
    RPAREN  shift, and go to state 143


state 103

   71 assign_stmt: IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 144


state 104

   72 assign_stmt: IDENTIFIER DIV_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 145


state 105

   74 assign_stmt: IDENTIFIER PLUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 146


state 106

   75 assign_stmt: IDENTIFIER MINUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 107

   73 assign_stmt: IDENTIFIER MULT_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 148


state 108

   68 const_dec_stmt: CONST type IDENTIFIER . ASSIGN constant SEMICOLON

    ASSIGN  shift, and go to state 149


state 109

    1 stmts: stmts . stmt
    5 stmt: LBRACE $@1 stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 150
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 110

   35 bool_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 35 (bool_expr)


state 111

   52 para: LPAREN binary_expr RPAREN .

    $default  reduce using rule 52 (para)


state 112

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   76 while_stmt: WHILE LPAREN expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 151
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 113

   71 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   72            | IDENTIFIER . DIV_EQ value SEMICOLON
   73            | IDENTIFIER . MULT_EQ value SEMICOLON
   74            | IDENTIFIER . PLUS_EQ value SEMICOLON
   75            | IDENTIFIER . MINUS_EQ value SEMICOLON

    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54


state 114

   80 for_stmt: FOR LPAREN var_dec_stmt . expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 152
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 115

   81 for_stmt: FOR LPAREN assign_stmt . expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 153
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 116

   69 var_dec_stmt: type . IDENTIFIER SEMICOLON
   70             | type . IDENTIFIER ASSIGN value SEMICOLON

    IDENTIFIER  shift, and go to state 154


state 117

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   82 switch_stmt: SWITCH LPAREN expr . RPAREN LBRACE case_stmts RBRACE

    RPAREN   shift, and go to state 155
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 118

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   77 if_stmt: IF LPAREN expr . RPAREN LBRACE stmts RBRACE
   78        | IF LPAREN expr . RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    RPAREN   shift, and go to state 156
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 119

    1 stmts: stmts . stmt
   79 repeat_until_stmt: REPEAT LBRACE stmts . RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 157
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 120

   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term
   52 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 111
    MINUS   shift, and go to state 92
    PLUS    shift, and go to state 93


state 121

   93 function_prototype: VOID IDENTIFIER LPAREN . params RPAREN
   94                   | VOID IDENTIFIER LPAREN . RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    RPAREN  shift, and go to state 158

    type    go to state 159
    params  go to state 160
    param   go to state 161


state 122

   15 stmt: RETURN ret_val SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 123

   18 stmt: PRINT LPAREN value . RPAREN SEMICOLON

    RPAREN  shift, and go to state 162


state 124

   31 bool_expr: expr LE arithmetic_expr .

    $default  reduce using rule 31 (bool_expr)


state 125

   30 bool_expr: expr GE arithmetic_expr .

    $default  reduce using rule 30 (bool_expr)


state 126

   27 bool_expr: expr NE arithmetic_expr .

    $default  reduce using rule 27 (bool_expr)


state 127

   26 bool_expr: expr EQUAL arithmetic_expr .

    $default  reduce using rule 26 (bool_expr)


state 128

   29 bool_expr: expr LESS arithmetic_expr .

    $default  reduce using rule 29 (bool_expr)


state 129

   28 bool_expr: expr GREATER arithmetic_expr .

    $default  reduce using rule 28 (bool_expr)


state 130

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   33          | expr OR expr .

    $default  reduce using rule 33 (bool_expr)


state 131

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   32          | expr AND expr .
   33          | expr . OR expr

    $default  reduce using rule 32 (bool_expr)


state 132

   44 binary_expr: binary_expr MINUS term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 44 (binary_expr)


state 133

   43 binary_expr: binary_expr PLUS term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 43 (binary_expr)


state 134

   48 term: term MOD factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 48 (term)


state 135

   47 term: term DIV factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 47 (term)


state 136

   46 term: term MULT factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 46 (term)


state 137

   55 factor: factor . EXP factor
   55       | factor EXP factor .

    $default  reduce using rule 55 (factor)


state 138

   69 var_dec_stmt: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 69 (var_dec_stmt)


state 139

   95 function_prototype: type IDENTIFIER LPAREN . params RPAREN
   96                   | type IDENTIFIER LPAREN . RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    RPAREN  shift, and go to state 163

    type    go to state 159
    params  go to state 164
    param   go to state 161


state 140

   70 var_dec_stmt: type IDENTIFIER ASSIGN . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 165
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 141

    1 stmts: stmts . stmt
   92 function: function_prototype LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 166
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 142

   60 call_params: call_params COMMA . value

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 167
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 143

   59 function_call: IDENTIFIER LPAREN call_params RPAREN .

    $default  reduce using rule 59 (function_call)


state 144

   71 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 71 (assign_stmt)


state 145

   72 assign_stmt: IDENTIFIER DIV_EQ value SEMICOLON .

    $default  reduce using rule 72 (assign_stmt)


state 146

   74 assign_stmt: IDENTIFIER PLUS_EQ value SEMICOLON .

    $default  reduce using rule 74 (assign_stmt)


state 147

   75 assign_stmt: IDENTIFIER MINUS_EQ value SEMICOLON .

    $default  reduce using rule 75 (assign_stmt)


state 148

   73 assign_stmt: IDENTIFIER MULT_EQ value SEMICOLON .

    $default  reduce using rule 73 (assign_stmt)


state 149

   68 const_dec_stmt: CONST type IDENTIFIER ASSIGN . constant SEMICOLON

    INT_VAL     shift, and go to state 168
    FLOAT_VAL   shift, and go to state 169
    CHAR_VAL    shift, and go to state 170
    STRING_VAL  shift, and go to state 171
    TRUE_VAL    shift, and go to state 172
    FALSE_VAL   shift, and go to state 173

    constant  go to state 174


state 150

    5 stmt: LBRACE $@1 stmts RBRACE .

    $default  reduce using rule 5 (stmt)


state 151

   76 while_stmt: WHILE LPAREN expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 175


state 152

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   80 for_stmt: FOR LPAREN var_dec_stmt expr . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 176
    LE         shift, and go to state 84
    GE         shift, and go to state 85
    NE         shift, and go to state 86
    EQUAL      shift, and go to state 87
    LESS       shift, and go to state 88
    GREATER    shift, and go to state 89
    OR         shift, and go to state 90
    AND        shift, and go to state 91


state 153

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   81 for_stmt: FOR LPAREN assign_stmt expr . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 177
    LE         shift, and go to state 84
    GE         shift, and go to state 85
    NE         shift, and go to state 86
    EQUAL      shift, and go to state 87
    LESS       shift, and go to state 88
    GREATER    shift, and go to state 89
    OR         shift, and go to state 90
    AND        shift, and go to state 91


state 154

   69 var_dec_stmt: type IDENTIFIER . SEMICOLON
   70             | type IDENTIFIER . ASSIGN value SEMICOLON

    SEMICOLON  shift, and go to state 138
    ASSIGN     shift, and go to state 140


state 155

   82 switch_stmt: SWITCH LPAREN expr RPAREN . LBRACE case_stmts RBRACE

    LBRACE  shift, and go to state 178


state 156

   77 if_stmt: IF LPAREN expr RPAREN . LBRACE stmts RBRACE
   78        | IF LPAREN expr RPAREN . LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    LBRACE  shift, and go to state 179


state 157

   79 repeat_until_stmt: REPEAT LBRACE stmts RBRACE . UNTIL LPAREN expr RPAREN SEMICOLON

    UNTIL  shift, and go to state 180


state 158

   94 function_prototype: VOID IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 94 (function_prototype)


state 159

   99 param: type . IDENTIFIER
  100      | type . IDENTIFIER ASSIGN constant

    IDENTIFIER  shift, and go to state 181


state 160

   93 function_prototype: VOID IDENTIFIER LPAREN params . RPAREN
   98 params: params . COMMA param

    COMMA   shift, and go to state 182
    RPAREN  shift, and go to state 183


state 161

   97 params: param .

    $default  reduce using rule 97 (params)


state 162

   18 stmt: PRINT LPAREN value RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 184


state 163

   96 function_prototype: type IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 96 (function_prototype)


state 164

   95 function_prototype: type IDENTIFIER LPAREN params . RPAREN
   98 params: params . COMMA param

    COMMA   shift, and go to state 182
    RPAREN  shift, and go to state 185


state 165

   70 var_dec_stmt: type IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 186


state 166

   92 function: function_prototype LBRACE stmts RBRACE .

    $default  reduce using rule 92 (function)


state 167

   60 call_params: call_params COMMA value .

    $default  reduce using rule 60 (call_params)


state 168

   62 constant: INT_VAL .

    $default  reduce using rule 62 (constant)


state 169

   63 constant: FLOAT_VAL .

    $default  reduce using rule 63 (constant)


state 170

   65 constant: CHAR_VAL .

    $default  reduce using rule 65 (constant)


state 171

   64 constant: STRING_VAL .

    $default  reduce using rule 64 (constant)


state 172

   66 constant: TRUE_VAL .

    $default  reduce using rule 66 (constant)


state 173

   67 constant: FALSE_VAL .

    $default  reduce using rule 67 (constant)


state 174

   68 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant . SEMICOLON

    SEMICOLON  shift, and go to state 187


state 175

   76 while_stmt: WHILE LPAREN expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 188
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 176

   80 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 189
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 177

   81 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 190
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 178

   82 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE . case_stmts RBRACE

    CASE     shift, and go to state 191
    DEFAULT  shift, and go to state 192

    case_stmts  go to state 193
    case_stmt   go to state 194


state 179

   77 if_stmt: IF LPAREN expr RPAREN LBRACE . stmts RBRACE
   78        | IF LPAREN expr RPAREN LBRACE . stmts RBRACE ELSE LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 195
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 180

   79 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL . LPAREN expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 196


state 181

   99 param: type IDENTIFIER .
  100      | type IDENTIFIER . ASSIGN constant

    ASSIGN  shift, and go to state 197

    $default  reduce using rule 99 (param)


state 182

   98 params: params COMMA . param

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type   go to state 159
    param  go to state 198


state 183

   93 function_prototype: VOID IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 93 (function_prototype)


state 184

   18 stmt: PRINT LPAREN value RPAREN SEMICOLON .

    $default  reduce using rule 18 (stmt)


state 185

   95 function_prototype: type IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 95 (function_prototype)


state 186

   70 var_dec_stmt: type IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 70 (var_dec_stmt)


state 187

   68 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON .

    $default  reduce using rule 68 (const_dec_stmt)


state 188

    1 stmts: stmts . stmt
   76 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 199
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 189

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   80 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 200
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 190

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   81 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 201
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 191

   85 case_stmt: CASE . value COLON stmts

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 202
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 192

   86 case_stmt: DEFAULT . COLON stmts

    COLON  shift, and go to state 203


state 193

   82 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE case_stmts . RBRACE
   83 case_stmts: case_stmts . case_stmt

    RBRACE   shift, and go to state 204
    CASE     shift, and go to state 191
    DEFAULT  shift, and go to state 192

    case_stmt  go to state 205


state 194

   84 case_stmts: case_stmt .

    $default  reduce using rule 84 (case_stmts)


state 195

    1 stmts: stmts . stmt
   77 if_stmt: IF LPAREN expr RPAREN LBRACE stmts . RBRACE
   78        | IF LPAREN expr RPAREN LBRACE stmts . RBRACE ELSE LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 206
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 196

   79 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN . expr RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 207
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 197

  100 param: type IDENTIFIER ASSIGN . constant

    INT_VAL     shift, and go to state 168
    FLOAT_VAL   shift, and go to state 169
    CHAR_VAL    shift, and go to state 170
    STRING_VAL  shift, and go to state 171
    TRUE_VAL    shift, and go to state 172
    FALSE_VAL   shift, and go to state 173

    constant  go to state 208


state 198

   98 params: params COMMA param .

    $default  reduce using rule 98 (params)


state 199

   76 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 76 (while_stmt)


state 200

   80 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 209


state 201

   81 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 210


state 202

   85 case_stmt: CASE value . COLON stmts

    COLON  shift, and go to state 211


state 203

   86 case_stmt: DEFAULT COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 212
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 204

   82 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE case_stmts RBRACE .

    $default  reduce using rule 82 (switch_stmt)


state 205

   83 case_stmts: case_stmts case_stmt .

    $default  reduce using rule 83 (case_stmts)


state 206

   77 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE .
   78        | IF LPAREN expr RPAREN LBRACE stmts RBRACE . ELSE LBRACE stmts RBRACE

    ELSE  shift, and go to state 213

    $default  reduce using rule 77 (if_stmt)


state 207

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   79 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr . RPAREN SEMICOLON

    RPAREN   shift, and go to state 214
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 208

  100 param: type IDENTIFIER ASSIGN constant .

    $default  reduce using rule 100 (param)


state 209

   80 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 215
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 210

   81 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 216
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 211

   85 case_stmt: CASE value COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 217
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 212

    1 stmts: stmts . stmt
   86 case_stmt: DEFAULT COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 86 (case_stmt)

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 213

   78 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 218


state 214

   79 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 219


state 215

    1 stmts: stmts . stmt
   80 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 220
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 216

    1 stmts: stmts . stmt
   81 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 221
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 217

    1 stmts: stmts . stmt
   85 case_stmt: CASE value COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 85 (case_stmt)

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 218

   78 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 222
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 219

   79 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON .

    $default  reduce using rule 79 (repeat_until_stmt)


state 220

   80 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 80 (for_stmt)


state 221

   81 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 81 (for_stmt)


state 222

    1 stmts: stmts . stmt
   78 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 223
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 223

   78 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE .

    $default  reduce using rule 78 (if_stmt)
