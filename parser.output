Grammar

    0 $accept: stmts $end

    1 stmts: stmts stmt
    2      | stmt

    3 stmt: expr SEMICOLON
    4     | LBRACE stmts RBRACE
    5     | const_dec_stmt
    6     | var_dec_stmt
    7     | assign_stmt
    8     | while_stmt
    9     | if_stmt
   10     | repeat_until_stmt
   11     | for_stmt
   12     | switch_stmt
   13     | function
   14     | RETURN ret_val SEMICOLON
   15     | BREAK SEMICOLON
   16     | CONTINUE SEMICOLON
   17     | PRINT LPAREN value RPAREN SEMICOLON

   18 ret_val: value
   19        | /* empty */

   20 value: expr
   21      | STRING_VAL
   22      | CHAR_VAL

   23 expr: bool_expr
   24     | arithmetic_expr

   25 bool_expr: expr EQUAL arithmetic_expr
   26          | expr NE arithmetic_expr
   27          | expr GREATER arithmetic_expr
   28          | expr LESS arithmetic_expr
   29          | expr GE arithmetic_expr
   30          | expr LE arithmetic_expr
   31          | expr AND expr
   32          | expr OR expr
   33          | NOT expr
   34          | LPAREN bool_expr RPAREN
   35          | TRUE_VAL
   36          | FALSE_VAL

   37 arithmetic_expr: binary_expr
   38                | unary_expr

   39 unary_expr: IDENTIFIER INC
   40           | IDENTIFIER DEC

   41 binary_expr: term
   42            | binary_expr PLUS term
   43            | binary_expr MINUS term

   44 term: negat
   45     | term MULT factor
   46     | term DIV factor
   47     | term MOD factor

   48 negat: para
   49      | MINUS para

   50 para: factor
   51     | LPAREN binary_expr RPAREN

   52 factor: INT_VAL
   53       | FLOAT_VAL
   54       | factor EXP factor
   55       | function_call
   56       | IDENTIFIER

   57 function_call: IDENTIFIER LPAREN RPAREN
   58              | IDENTIFIER LPAREN call_params RPAREN

   59 call_params: call_params COMMA value
   60            | value

   61 constant: INT_VAL
   62         | FLOAT_VAL
   63         | STRING_VAL
   64         | CHAR_VAL
   65         | TRUE_VAL
   66         | FALSE_VAL

   67 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON

   68 var_dec_stmt: type IDENTIFIER SEMICOLON
   69             | type IDENTIFIER ASSIGN value SEMICOLON

   70 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON
   71            | IDENTIFIER DIV_EQ value SEMICOLON
   72            | IDENTIFIER MULT_EQ value SEMICOLON
   73            | IDENTIFIER PLUS_EQ value SEMICOLON
   74            | IDENTIFIER MINUS_EQ value SEMICOLON

   75 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmts RBRACE

   76 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE
   77        | IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

   78 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

   79 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   80         | FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

   81 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE case_stmts RBRACE

   82 case_stmts: case_stmts case_stmt
   83           | case_stmt

   84 case_stmt: CASE value COLON stmts
   85          | DEFAULT COLON stmts

   86 type: INT
   87     | FLOAT
   88     | CHAR
   89     | STRING
   90     | BOOL

   91 function: function_prototype LBRACE stmts RBRACE

   92 function_prototype: VOID IDENTIFIER LPAREN params RPAREN
   93                   | VOID IDENTIFIER LPAREN RPAREN
   94                   | type IDENTIFIER LPAREN params RPAREN
   95                   | type IDENTIFIER LPAREN RPAREN

   96 params: param
   97       | params COMMA param

   98 param: type IDENTIFIER
   99      | type IDENTIFIER ASSIGN constant


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 86
FLOAT (259) 87
CHAR (260) 88
BOOL (261) 90
STRING (262) 89
INT_VAL (263) 52 61
FLOAT_VAL (264) 53 62
CHAR_VAL (265) 22 64
STRING_VAL (266) 21 63
TRUE_VAL (267) 35 65
FALSE_VAL (268) 36 66
IDENTIFIER (269) 39 40 56 57 58 67 68 69 70 71 72 73 74 92 93 94 95
    98 99
CONST (270) 67
SEMICOLON (271) 3 14 15 16 17 67 68 69 70 71 72 73 74 78 79 80
COMMA (272) 59 97
LBRACE (273) 4 75 76 77 78 79 80 81 91
RBRACE (274) 4 75 76 77 78 79 80 81 91
LPAREN (275) 17 34 51 57 58 75 76 77 78 79 80 81 92 93 94 95
RPAREN (276) 17 34 51 57 58 75 76 77 78 79 80 81 92 93 94 95
BREAK (277) 15
CONTINUE (278) 16
WHILE (279) 75
FOR (280) 79 80
SWITCH (281) 81
CASE (282) 84
DEFAULT (283) 85
COLON (284) 84 85
IF (285) 76 77
ELSE (286) 77
REPEAT (287) 78
UNTIL (288) 78
LE (289) 30
GE (290) 29
NE (291) 26
EQUAL (292) 25
LESS (293) 28
GREATER (294) 27
MINUS (295) 43 49
PLUS (296) 42
MOD (297) 47
DIV (298) 46
MULT (299) 45
EXP (300) 54
OR (301) 32
AND (302) 31
NOT (303) 33
ASSIGN (304) 67 69 70 99
DIV_EQ (305) 71
PLUS_EQ (306) 73
MINUS_EQ (307) 74
MULT_EQ (308) 72
INC (309) 39
DEC (310) 40
UMINUS (311)
VOID (312) 92 93
RETURN (313) 14
PRINT (314) 17


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
stmts (61)
    on left: 1 2, on right: 0 1 4 75 76 77 78 79 80 84 85 91
stmt (62)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 1 2
ret_val (63)
    on left: 18 19, on right: 14
value (64)
    on left: 20 21 22, on right: 17 18 59 60 69 70 71 72 73 74 84
expr (65)
    on left: 23 24, on right: 3 20 25 26 27 28 29 30 31 32 33 75 76
    77 78 79 80 81
bool_expr (66)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36, on right: 23 34
arithmetic_expr (67)
    on left: 37 38, on right: 24 25 26 27 28 29 30
unary_expr (68)
    on left: 39 40, on right: 38
binary_expr (69)
    on left: 41 42 43, on right: 37 42 43 51
term (70)
    on left: 44 45 46 47, on right: 41 42 43 45 46 47
negat (71)
    on left: 48 49, on right: 44
para (72)
    on left: 50 51, on right: 48 49
factor (73)
    on left: 52 53 54 55 56, on right: 45 46 47 50 54
function_call (74)
    on left: 57 58, on right: 55
call_params (75)
    on left: 59 60, on right: 58 59
constant (76)
    on left: 61 62 63 64 65 66, on right: 67 99
const_dec_stmt (77)
    on left: 67, on right: 5
var_dec_stmt (78)
    on left: 68 69, on right: 6 79
assign_stmt (79)
    on left: 70 71 72 73 74, on right: 7 80
while_stmt (80)
    on left: 75, on right: 8
if_stmt (81)
    on left: 76 77, on right: 9
repeat_until_stmt (82)
    on left: 78, on right: 10
for_stmt (83)
    on left: 79 80, on right: 11
switch_stmt (84)
    on left: 81, on right: 12
case_stmts (85)
    on left: 82 83, on right: 81 82
case_stmt (86)
    on left: 84 85, on right: 82 83
type (87)
    on left: 86 87 88 89 90, on right: 67 68 69 94 95 98 99
function (88)
    on left: 91, on right: 13
function_prototype (89)
    on left: 92 93 94 95, on right: 91
params (90)
    on left: 96 97, on right: 92 94 97
param (91)
    on left: 98 99, on right: 96 97


state 0

    0 $accept: . stmts $end

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 26
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 1

   86 type: INT .

    $default  reduce using rule 86 (type)


state 2

   87 type: FLOAT .

    $default  reduce using rule 87 (type)


state 3

   88 type: CHAR .

    $default  reduce using rule 88 (type)


state 4

   90 type: BOOL .

    $default  reduce using rule 90 (type)


state 5

   89 type: STRING .

    $default  reduce using rule 89 (type)


state 6

   52 factor: INT_VAL .

    $default  reduce using rule 52 (factor)


state 7

   53 factor: FLOAT_VAL .

    $default  reduce using rule 53 (factor)


state 8

   35 bool_expr: TRUE_VAL .

    $default  reduce using rule 35 (bool_expr)


state 9

   36 bool_expr: FALSE_VAL .

    $default  reduce using rule 36 (bool_expr)


state 10

   39 unary_expr: IDENTIFIER . INC
   40           | IDENTIFIER . DEC
   56 factor: IDENTIFIER .
   57 function_call: IDENTIFIER . LPAREN RPAREN
   58              | IDENTIFIER . LPAREN call_params RPAREN
   70 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   71            | IDENTIFIER . DIV_EQ value SEMICOLON
   72            | IDENTIFIER . MULT_EQ value SEMICOLON
   73            | IDENTIFIER . PLUS_EQ value SEMICOLON
   74            | IDENTIFIER . MINUS_EQ value SEMICOLON

    LPAREN    shift, and go to state 49
    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54
    INC       shift, and go to state 55
    DEC       shift, and go to state 56

    $default  reduce using rule 56 (factor)


state 11

   67 const_dec_stmt: CONST . type IDENTIFIER ASSIGN constant SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type  go to state 57


state 12

    4 stmt: LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 58
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 13

   34 bool_expr: LPAREN . bool_expr RPAREN
   51 para: LPAREN . binary_expr RPAREN

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 60
    bool_expr        go to state 61
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 62
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 14

   15 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 15

   16 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 64


state 16

   75 while_stmt: WHILE . LPAREN expr RPAREN LBRACE stmts RBRACE

    LPAREN  shift, and go to state 65


state 17

   79 for_stmt: FOR . LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   80         | FOR . LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LPAREN  shift, and go to state 66


state 18

   81 switch_stmt: SWITCH . LPAREN expr RPAREN LBRACE case_stmts RBRACE

    LPAREN  shift, and go to state 67


state 19

   76 if_stmt: IF . LPAREN expr RPAREN LBRACE stmts RBRACE
   77        | IF . LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    LPAREN  shift, and go to state 68


state 20

   78 repeat_until_stmt: REPEAT . LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    LBRACE  shift, and go to state 69


state 21

   49 negat: MINUS . para

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 70
    LPAREN      shift, and go to state 71

    para           go to state 72
    factor         go to state 36
    function_call  go to state 37


state 22

   33 bool_expr: NOT . expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 73
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 23

   92 function_prototype: VOID . IDENTIFIER LPAREN params RPAREN
   93                   | VOID . IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 74


state 24

   14 stmt: RETURN . ret_val SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    $default  reduce using rule 19 (ret_val)

    ret_val          go to state 77
    value            go to state 78
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 25

   17 stmt: PRINT . LPAREN value RPAREN SEMICOLON

    LPAREN  shift, and go to state 80


state 26

    0 $accept: stmts . $end
    1 stmts: stmts . stmt

    $end        shift, and go to state 81
    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 27

    2 stmts: stmt .

    $default  reduce using rule 2 (stmts)


state 28

    3 stmt: expr . SEMICOLON
   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr

    SEMICOLON  shift, and go to state 83
    LE         shift, and go to state 84
    GE         shift, and go to state 85
    NE         shift, and go to state 86
    EQUAL      shift, and go to state 87
    LESS       shift, and go to state 88
    GREATER    shift, and go to state 89
    OR         shift, and go to state 90
    AND        shift, and go to state 91


state 29

   23 expr: bool_expr .

    $default  reduce using rule 23 (expr)


state 30

   24 expr: arithmetic_expr .

    $default  reduce using rule 24 (expr)


state 31

   38 arithmetic_expr: unary_expr .

    $default  reduce using rule 38 (arithmetic_expr)


state 32

   37 arithmetic_expr: binary_expr .
   42 binary_expr: binary_expr . PLUS term
   43            | binary_expr . MINUS term

    MINUS  shift, and go to state 92
    PLUS   shift, and go to state 93

    $default  reduce using rule 37 (arithmetic_expr)


state 33

   41 binary_expr: term .
   45 term: term . MULT factor
   46     | term . DIV factor
   47     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 41 (binary_expr)


state 34

   44 term: negat .

    $default  reduce using rule 44 (term)


state 35

   48 negat: para .

    $default  reduce using rule 48 (negat)


state 36

   50 para: factor .
   54 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 50 (para)


state 37

   55 factor: function_call .

    $default  reduce using rule 55 (factor)


state 38

    5 stmt: const_dec_stmt .

    $default  reduce using rule 5 (stmt)


state 39

    6 stmt: var_dec_stmt .

    $default  reduce using rule 6 (stmt)


state 40

    7 stmt: assign_stmt .

    $default  reduce using rule 7 (stmt)


state 41

    8 stmt: while_stmt .

    $default  reduce using rule 8 (stmt)


state 42

    9 stmt: if_stmt .

    $default  reduce using rule 9 (stmt)


state 43

   10 stmt: repeat_until_stmt .

    $default  reduce using rule 10 (stmt)


state 44

   11 stmt: for_stmt .

    $default  reduce using rule 11 (stmt)


state 45

   12 stmt: switch_stmt .

    $default  reduce using rule 12 (stmt)


state 46

   68 var_dec_stmt: type . IDENTIFIER SEMICOLON
   69             | type . IDENTIFIER ASSIGN value SEMICOLON
   94 function_prototype: type . IDENTIFIER LPAREN params RPAREN
   95                   | type . IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 98


state 47

   13 stmt: function .

    $default  reduce using rule 13 (stmt)


state 48

   91 function: function_prototype . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 99


state 49

   57 function_call: IDENTIFIER LPAREN . RPAREN
   58              | IDENTIFIER LPAREN . call_params RPAREN

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    RPAREN      shift, and go to state 100
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 101
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37
    call_params      go to state 102


state 50

   70 assign_stmt: IDENTIFIER ASSIGN . value SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 103
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 51

   71 assign_stmt: IDENTIFIER DIV_EQ . value SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 104
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 52

   73 assign_stmt: IDENTIFIER PLUS_EQ . value SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 105
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 53

   74 assign_stmt: IDENTIFIER MINUS_EQ . value SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 106
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 54

   72 assign_stmt: IDENTIFIER MULT_EQ . value SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 107
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 55

   39 unary_expr: IDENTIFIER INC .

    $default  reduce using rule 39 (unary_expr)


state 56

   40 unary_expr: IDENTIFIER DEC .

    $default  reduce using rule 40 (unary_expr)


state 57

   67 const_dec_stmt: CONST type . IDENTIFIER ASSIGN constant SEMICOLON

    IDENTIFIER  shift, and go to state 108


state 58

    1 stmts: stmts . stmt
    4 stmt: LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 109
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 59

   39 unary_expr: IDENTIFIER . INC
   40           | IDENTIFIER . DEC
   56 factor: IDENTIFIER .
   57 function_call: IDENTIFIER . LPAREN RPAREN
   58              | IDENTIFIER . LPAREN call_params RPAREN

    LPAREN  shift, and go to state 49
    INC     shift, and go to state 55
    DEC     shift, and go to state 56

    $default  reduce using rule 56 (factor)


state 60

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 61

   23 expr: bool_expr .
   34 bool_expr: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 110

    $default  reduce using rule 23 (expr)


state 62

   37 arithmetic_expr: binary_expr .
   42 binary_expr: binary_expr . PLUS term
   43            | binary_expr . MINUS term
   51 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 111
    MINUS   shift, and go to state 92
    PLUS    shift, and go to state 93

    $default  reduce using rule 37 (arithmetic_expr)


state 63

   15 stmt: BREAK SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 64

   16 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 16 (stmt)


state 65

   75 while_stmt: WHILE LPAREN . expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 112
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 66

   79 for_stmt: FOR LPAREN . var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE
   80         | FOR LPAREN . assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 113

    var_dec_stmt  go to state 114
    assign_stmt   go to state 115
    type          go to state 116


state 67

   81 switch_stmt: SWITCH LPAREN . expr RPAREN LBRACE case_stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 117
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 68

   76 if_stmt: IF LPAREN . expr RPAREN LBRACE stmts RBRACE
   77        | IF LPAREN . expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 118
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 69

   78 repeat_until_stmt: REPEAT LBRACE . stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 119
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 70

   56 factor: IDENTIFIER .
   57 function_call: IDENTIFIER . LPAREN RPAREN
   58              | IDENTIFIER . LPAREN call_params RPAREN

    LPAREN  shift, and go to state 49

    $default  reduce using rule 56 (factor)


state 71

   51 para: LPAREN . binary_expr RPAREN

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 70
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    binary_expr    go to state 120
    term           go to state 33
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 72

   49 negat: MINUS para .

    $default  reduce using rule 49 (negat)


state 73

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   33          | NOT expr .

    $default  reduce using rule 33 (bool_expr)


state 74

   92 function_prototype: VOID IDENTIFIER . LPAREN params RPAREN
   93                   | VOID IDENTIFIER . LPAREN RPAREN

    LPAREN  shift, and go to state 121


state 75

   22 value: CHAR_VAL .

    $default  reduce using rule 22 (value)


state 76

   21 value: STRING_VAL .

    $default  reduce using rule 21 (value)


state 77

   14 stmt: RETURN ret_val . SEMICOLON

    SEMICOLON  shift, and go to state 122


state 78

   18 ret_val: value .

    $default  reduce using rule 18 (ret_val)


state 79

   20 value: expr .
   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91

    $default  reduce using rule 20 (value)


state 80

   17 stmt: PRINT LPAREN . value RPAREN SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 123
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 81

    0 $accept: stmts $end .

    $default  accept


state 82

    1 stmts: stmts stmt .

    $default  reduce using rule 1 (stmts)


state 83

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


state 84

   30 bool_expr: expr LE . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 124
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 85

   29 bool_expr: expr GE . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 125
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 86

   26 bool_expr: expr NE . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 126
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 87

   25 bool_expr: expr EQUAL . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 127
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 88

   28 bool_expr: expr LESS . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 128
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 89

   27 bool_expr: expr GREATER . arithmetic_expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 129
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 90

   32 bool_expr: expr OR . expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 130
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 91

   31 bool_expr: expr AND . expr

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 131
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 92

   43 binary_expr: binary_expr MINUS . term

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 70
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    term           go to state 132
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 93

   42 binary_expr: binary_expr PLUS . term

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 70
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    term           go to state 133
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 94

   47 term: term MOD . factor

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 70

    factor         go to state 134
    function_call  go to state 37


state 95

   46 term: term DIV . factor

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 70

    factor         go to state 135
    function_call  go to state 37


state 96

   45 term: term MULT . factor

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 70

    factor         go to state 136
    function_call  go to state 37


state 97

   54 factor: factor EXP . factor

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    IDENTIFIER  shift, and go to state 70

    factor         go to state 137
    function_call  go to state 37


state 98

   68 var_dec_stmt: type IDENTIFIER . SEMICOLON
   69             | type IDENTIFIER . ASSIGN value SEMICOLON
   94 function_prototype: type IDENTIFIER . LPAREN params RPAREN
   95                   | type IDENTIFIER . LPAREN RPAREN

    SEMICOLON  shift, and go to state 138
    LPAREN     shift, and go to state 139
    ASSIGN     shift, and go to state 140


state 99

   91 function: function_prototype LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 141
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 100

   57 function_call: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 57 (function_call)


state 101

   60 call_params: value .

    $default  reduce using rule 60 (call_params)


state 102

   58 function_call: IDENTIFIER LPAREN call_params . RPAREN
   59 call_params: call_params . COMMA value

    COMMA   shift, and go to state 142
    RPAREN  shift, and go to state 143


state 103

   70 assign_stmt: IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 144


state 104

   71 assign_stmt: IDENTIFIER DIV_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 145


state 105

   73 assign_stmt: IDENTIFIER PLUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 146


state 106

   74 assign_stmt: IDENTIFIER MINUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 107

   72 assign_stmt: IDENTIFIER MULT_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 148


state 108

   67 const_dec_stmt: CONST type IDENTIFIER . ASSIGN constant SEMICOLON

    ASSIGN  shift, and go to state 149


state 109

    4 stmt: LBRACE stmts RBRACE .

    $default  reduce using rule 4 (stmt)


state 110

   34 bool_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 34 (bool_expr)


state 111

   51 para: LPAREN binary_expr RPAREN .

    $default  reduce using rule 51 (para)


state 112

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   75 while_stmt: WHILE LPAREN expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 150
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 113

   70 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   71            | IDENTIFIER . DIV_EQ value SEMICOLON
   72            | IDENTIFIER . MULT_EQ value SEMICOLON
   73            | IDENTIFIER . PLUS_EQ value SEMICOLON
   74            | IDENTIFIER . MINUS_EQ value SEMICOLON

    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54


state 114

   79 for_stmt: FOR LPAREN var_dec_stmt . expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 151
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 115

   80 for_stmt: FOR LPAREN assign_stmt . expr SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 152
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 116

   68 var_dec_stmt: type . IDENTIFIER SEMICOLON
   69             | type . IDENTIFIER ASSIGN value SEMICOLON

    IDENTIFIER  shift, and go to state 153


state 117

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   81 switch_stmt: SWITCH LPAREN expr . RPAREN LBRACE case_stmts RBRACE

    RPAREN   shift, and go to state 154
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 118

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   76 if_stmt: IF LPAREN expr . RPAREN LBRACE stmts RBRACE
   77        | IF LPAREN expr . RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    RPAREN   shift, and go to state 155
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 119

    1 stmts: stmts . stmt
   78 repeat_until_stmt: REPEAT LBRACE stmts . RBRACE UNTIL LPAREN expr RPAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 156
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 120

   42 binary_expr: binary_expr . PLUS term
   43            | binary_expr . MINUS term
   51 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 111
    MINUS   shift, and go to state 92
    PLUS    shift, and go to state 93


state 121

   92 function_prototype: VOID IDENTIFIER LPAREN . params RPAREN
   93                   | VOID IDENTIFIER LPAREN . RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    RPAREN  shift, and go to state 157

    type    go to state 158
    params  go to state 159
    param   go to state 160


state 122

   14 stmt: RETURN ret_val SEMICOLON .

    $default  reduce using rule 14 (stmt)


state 123

   17 stmt: PRINT LPAREN value . RPAREN SEMICOLON

    RPAREN  shift, and go to state 161


state 124

   30 bool_expr: expr LE arithmetic_expr .

    $default  reduce using rule 30 (bool_expr)


state 125

   29 bool_expr: expr GE arithmetic_expr .

    $default  reduce using rule 29 (bool_expr)


state 126

   26 bool_expr: expr NE arithmetic_expr .

    $default  reduce using rule 26 (bool_expr)


state 127

   25 bool_expr: expr EQUAL arithmetic_expr .

    $default  reduce using rule 25 (bool_expr)


state 128

   28 bool_expr: expr LESS arithmetic_expr .

    $default  reduce using rule 28 (bool_expr)


state 129

   27 bool_expr: expr GREATER arithmetic_expr .

    $default  reduce using rule 27 (bool_expr)


state 130

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   32          | expr OR expr .

    $default  reduce using rule 32 (bool_expr)


state 131

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   31          | expr AND expr .
   32          | expr . OR expr

    $default  reduce using rule 31 (bool_expr)


state 132

   43 binary_expr: binary_expr MINUS term .
   45 term: term . MULT factor
   46     | term . DIV factor
   47     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 43 (binary_expr)


state 133

   42 binary_expr: binary_expr PLUS term .
   45 term: term . MULT factor
   46     | term . DIV factor
   47     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 42 (binary_expr)


state 134

   47 term: term MOD factor .
   54 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 47 (term)


state 135

   46 term: term DIV factor .
   54 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 46 (term)


state 136

   45 term: term MULT factor .
   54 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 45 (term)


state 137

   54 factor: factor . EXP factor
   54       | factor EXP factor .

    $default  reduce using rule 54 (factor)


state 138

   68 var_dec_stmt: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 68 (var_dec_stmt)


state 139

   94 function_prototype: type IDENTIFIER LPAREN . params RPAREN
   95                   | type IDENTIFIER LPAREN . RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    RPAREN  shift, and go to state 162

    type    go to state 158
    params  go to state 163
    param   go to state 160


state 140

   69 var_dec_stmt: type IDENTIFIER ASSIGN . value SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 164
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 141

    1 stmts: stmts . stmt
   91 function: function_prototype LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 165
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 142

   59 call_params: call_params COMMA . value

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 166
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 143

   58 function_call: IDENTIFIER LPAREN call_params RPAREN .

    $default  reduce using rule 58 (function_call)


state 144

   70 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 70 (assign_stmt)


state 145

   71 assign_stmt: IDENTIFIER DIV_EQ value SEMICOLON .

    $default  reduce using rule 71 (assign_stmt)


state 146

   73 assign_stmt: IDENTIFIER PLUS_EQ value SEMICOLON .

    $default  reduce using rule 73 (assign_stmt)


state 147

   74 assign_stmt: IDENTIFIER MINUS_EQ value SEMICOLON .

    $default  reduce using rule 74 (assign_stmt)


state 148

   72 assign_stmt: IDENTIFIER MULT_EQ value SEMICOLON .

    $default  reduce using rule 72 (assign_stmt)


state 149

   67 const_dec_stmt: CONST type IDENTIFIER ASSIGN . constant SEMICOLON

    INT_VAL     shift, and go to state 167
    FLOAT_VAL   shift, and go to state 168
    CHAR_VAL    shift, and go to state 169
    STRING_VAL  shift, and go to state 170
    TRUE_VAL    shift, and go to state 171
    FALSE_VAL   shift, and go to state 172

    constant  go to state 173


state 150

   75 while_stmt: WHILE LPAREN expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 174


state 151

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   79 for_stmt: FOR LPAREN var_dec_stmt expr . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 175
    LE         shift, and go to state 84
    GE         shift, and go to state 85
    NE         shift, and go to state 86
    EQUAL      shift, and go to state 87
    LESS       shift, and go to state 88
    GREATER    shift, and go to state 89
    OR         shift, and go to state 90
    AND        shift, and go to state 91


state 152

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   80 for_stmt: FOR LPAREN assign_stmt expr . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 176
    LE         shift, and go to state 84
    GE         shift, and go to state 85
    NE         shift, and go to state 86
    EQUAL      shift, and go to state 87
    LESS       shift, and go to state 88
    GREATER    shift, and go to state 89
    OR         shift, and go to state 90
    AND        shift, and go to state 91


state 153

   68 var_dec_stmt: type IDENTIFIER . SEMICOLON
   69             | type IDENTIFIER . ASSIGN value SEMICOLON

    SEMICOLON  shift, and go to state 138
    ASSIGN     shift, and go to state 140


state 154

   81 switch_stmt: SWITCH LPAREN expr RPAREN . LBRACE case_stmts RBRACE

    LBRACE  shift, and go to state 177


state 155

   76 if_stmt: IF LPAREN expr RPAREN . LBRACE stmts RBRACE
   77        | IF LPAREN expr RPAREN . LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    LBRACE  shift, and go to state 178


state 156

   78 repeat_until_stmt: REPEAT LBRACE stmts RBRACE . UNTIL LPAREN expr RPAREN SEMICOLON

    UNTIL  shift, and go to state 179


state 157

   93 function_prototype: VOID IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 93 (function_prototype)


state 158

   98 param: type . IDENTIFIER
   99      | type . IDENTIFIER ASSIGN constant

    IDENTIFIER  shift, and go to state 180


state 159

   92 function_prototype: VOID IDENTIFIER LPAREN params . RPAREN
   97 params: params . COMMA param

    COMMA   shift, and go to state 181
    RPAREN  shift, and go to state 182


state 160

   96 params: param .

    $default  reduce using rule 96 (params)


state 161

   17 stmt: PRINT LPAREN value RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 183


state 162

   95 function_prototype: type IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 95 (function_prototype)


state 163

   94 function_prototype: type IDENTIFIER LPAREN params . RPAREN
   97 params: params . COMMA param

    COMMA   shift, and go to state 181
    RPAREN  shift, and go to state 184


state 164

   69 var_dec_stmt: type IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 185


state 165

   91 function: function_prototype LBRACE stmts RBRACE .

    $default  reduce using rule 91 (function)


state 166

   59 call_params: call_params COMMA value .

    $default  reduce using rule 59 (call_params)


state 167

   61 constant: INT_VAL .

    $default  reduce using rule 61 (constant)


state 168

   62 constant: FLOAT_VAL .

    $default  reduce using rule 62 (constant)


state 169

   64 constant: CHAR_VAL .

    $default  reduce using rule 64 (constant)


state 170

   63 constant: STRING_VAL .

    $default  reduce using rule 63 (constant)


state 171

   65 constant: TRUE_VAL .

    $default  reduce using rule 65 (constant)


state 172

   66 constant: FALSE_VAL .

    $default  reduce using rule 66 (constant)


state 173

   67 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant . SEMICOLON

    SEMICOLON  shift, and go to state 186


state 174

   75 while_stmt: WHILE LPAREN expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 187
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 175

   79 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 188
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 176

   80 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 189
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 177

   81 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE . case_stmts RBRACE

    CASE     shift, and go to state 190
    DEFAULT  shift, and go to state 191

    case_stmts  go to state 192
    case_stmt   go to state 193


state 178

   76 if_stmt: IF LPAREN expr RPAREN LBRACE . stmts RBRACE
   77        | IF LPAREN expr RPAREN LBRACE . stmts RBRACE ELSE LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 194
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 179

   78 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL . LPAREN expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 195


state 180

   98 param: type IDENTIFIER .
   99      | type IDENTIFIER . ASSIGN constant

    ASSIGN  shift, and go to state 196

    $default  reduce using rule 98 (param)


state 181

   97 params: params COMMA . param

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type   go to state 158
    param  go to state 197


state 182

   92 function_prototype: VOID IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 92 (function_prototype)


state 183

   17 stmt: PRINT LPAREN value RPAREN SEMICOLON .

    $default  reduce using rule 17 (stmt)


state 184

   94 function_prototype: type IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 94 (function_prototype)


state 185

   69 var_dec_stmt: type IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 69 (var_dec_stmt)


state 186

   67 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON .

    $default  reduce using rule 67 (const_dec_stmt)


state 187

    1 stmts: stmts . stmt
   75 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 198
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 188

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   79 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 199
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 189

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   80 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 200
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 190

   84 case_stmt: CASE . value COLON stmts

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 201
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 191

   85 case_stmt: DEFAULT . COLON stmts

    COLON  shift, and go to state 202


state 192

   81 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE case_stmts . RBRACE
   82 case_stmts: case_stmts . case_stmt

    RBRACE   shift, and go to state 203
    CASE     shift, and go to state 190
    DEFAULT  shift, and go to state 191

    case_stmt  go to state 204


state 193

   83 case_stmts: case_stmt .

    $default  reduce using rule 83 (case_stmts)


state 194

    1 stmts: stmts . stmt
   76 if_stmt: IF LPAREN expr RPAREN LBRACE stmts . RBRACE
   77        | IF LPAREN expr RPAREN LBRACE stmts . RBRACE ELSE LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 205
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 195

   78 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN . expr RPAREN SEMICOLON

    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 59
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 206
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 196

   99 param: type IDENTIFIER ASSIGN . constant

    INT_VAL     shift, and go to state 167
    FLOAT_VAL   shift, and go to state 168
    CHAR_VAL    shift, and go to state 169
    STRING_VAL  shift, and go to state 170
    TRUE_VAL    shift, and go to state 171
    FALSE_VAL   shift, and go to state 172

    constant  go to state 207


state 197

   97 params: params COMMA param .

    $default  reduce using rule 97 (params)


state 198

   75 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 75 (while_stmt)


state 199

   79 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 208


state 200

   80 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 209


state 201

   84 case_stmt: CASE value . COLON stmts

    COLON  shift, and go to state 210


state 202

   85 case_stmt: DEFAULT COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 211
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 203

   81 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE case_stmts RBRACE .

    $default  reduce using rule 81 (switch_stmt)


state 204

   82 case_stmts: case_stmts case_stmt .

    $default  reduce using rule 82 (case_stmts)


state 205

   76 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE .
   77        | IF LPAREN expr RPAREN LBRACE stmts RBRACE . ELSE LBRACE stmts RBRACE

    ELSE  shift, and go to state 212

    $default  reduce using rule 76 (if_stmt)


state 206

   25 bool_expr: expr . EQUAL arithmetic_expr
   26          | expr . NE arithmetic_expr
   27          | expr . GREATER arithmetic_expr
   28          | expr . LESS arithmetic_expr
   29          | expr . GE arithmetic_expr
   30          | expr . LE arithmetic_expr
   31          | expr . AND expr
   32          | expr . OR expr
   78 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr . RPAREN SEMICOLON

    RPAREN   shift, and go to state 213
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 207

   99 param: type IDENTIFIER ASSIGN constant .

    $default  reduce using rule 99 (param)


state 208

   79 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 214
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 209

   80 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 215
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 210

   84 case_stmt: CASE value COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 216
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 211

    1 stmts: stmts . stmt
   85 case_stmt: DEFAULT COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 85 (case_stmt)

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 212

   77 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 217


state 213

   78 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 218


state 214

    1 stmts: stmts . stmt
   79 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 219
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 215

    1 stmts: stmts . stmt
   80 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 220
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 216

    1 stmts: stmts . stmt
   84 case_stmt: CASE value COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 84 (case_stmt)

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 217

   77 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 221
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 218

   78 repeat_until_stmt: REPEAT LBRACE stmts RBRACE UNTIL LPAREN expr RPAREN SEMICOLON .

    $default  reduce using rule 78 (repeat_until_stmt)


state 219

   79 for_stmt: FOR LPAREN var_dec_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 79 (for_stmt)


state 220

   80 for_stmt: FOR LPAREN assign_stmt expr SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 80 (for_stmt)


state 221

    1 stmts: stmts . stmt
   77 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_VAL     shift, and go to state 6
    FLOAT_VAL   shift, and go to state 7
    TRUE_VAL    shift, and go to state 8
    FALSE_VAL   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 222
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 222

   77 if_stmt: IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE .

    $default  reduce using rule 77 (if_stmt)
