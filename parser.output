Grammar

    0 $accept: stmts $end

    1 stmts: stmts stmt
    2      | stmt

    3 stmt: expr SEMICOLON

    4 $@1: /* empty */

    5 stmt: LBRACE $@1 stmts RBRACE
    6     | const_dec_stmt
    7     | var_dec_stmt
    8     | assign_stmt
    9     | while_stmt
   10     | if_stmt
   11     | repeat_until_stmt
   12     | for_stmt
   13     | switch_stmt
   14     | function
   15     | RETURN ret_val SEMICOLON
   16     | BREAK SEMICOLON
   17     | CONTINUE SEMICOLON
   18     | PRINT LPAREN value RPAREN SEMICOLON

   19 ret_val: value
   20        | /* empty */

   21 value: expr
   22      | STRING_VAL
   23      | CHAR_VAL

   24 expr: bool_expr
   25     | arithmetic_expr

   26 bool_expr: expr EQUAL arithmetic_expr
   27          | expr NE arithmetic_expr
   28          | expr GREATER arithmetic_expr
   29          | expr LESS arithmetic_expr
   30          | expr GE arithmetic_expr
   31          | expr LE arithmetic_expr
   32          | expr AND expr
   33          | expr OR expr
   34          | NOT expr
   35          | LPAREN bool_expr RPAREN
   36          | TRUE_VAL
   37          | FALSE_VAL

   38 arithmetic_expr: binary_expr
   39                | unary_expr

   40 unary_expr: IDENTIFIER INC
   41           | IDENTIFIER DEC

   42 binary_expr: term
   43            | binary_expr PLUS term
   44            | binary_expr MINUS term

   45 term: negat
   46     | term MULT factor
   47     | term DIV factor
   48     | term MOD factor

   49 negat: para
   50      | MINUS para

   51 para: factor
   52     | LPAREN binary_expr RPAREN

   53 factor: INT_VAL
   54       | FLOAT_VAL
   55       | factor EXP factor
   56       | function_call
   57       | IDENTIFIER

   58 $@2: /* empty */

   59 function_call: IDENTIFIER LPAREN $@2 RPAREN

   60 $@3: /* empty */

   61 function_call: IDENTIFIER LPAREN $@3 call_params RPAREN

   62 call_params: call_params COMMA value
   63            | value

   64 constant: INT_VAL
   65         | FLOAT_VAL
   66         | STRING_VAL
   67         | CHAR_VAL
   68         | TRUE_VAL
   69         | FALSE_VAL

   70 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON

   71 var_dec_stmt: type IDENTIFIER SEMICOLON
   72             | type IDENTIFIER ASSIGN value SEMICOLON

   73 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON
   74            | IDENTIFIER DIV_EQ value SEMICOLON
   75            | IDENTIFIER MULT_EQ value SEMICOLON
   76            | IDENTIFIER PLUS_EQ value SEMICOLON
   77            | IDENTIFIER MINUS_EQ value SEMICOLON

   78 $@4: /* empty */

   79 $@5: /* empty */

   80 while_stmt: WHILE LPAREN expr $@4 RPAREN LBRACE $@5 stmts RBRACE

   81 $@6: /* empty */

   82 $@7: /* empty */

   83 $@8: /* empty */

   84 if_stmt: IF LPAREN expr $@6 RPAREN LBRACE $@7 stmts RBRACE $@8 if_expression_stmt

   85 $@9: /* empty */

   86 if_expression_stmt: ELSE LBRACE $@9 stmts RBRACE
   87                   | /* empty */

   88 $@10: /* empty */

   89 $@11: /* empty */

   90 $@12: /* empty */

   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE $@11 UNTIL LPAREN expr $@12 RPAREN SEMICOLON

   92 $@13: /* empty */

   93 for_stmt: FOR $@13 for_expression_stmt

   94 $@14: /* empty */

   95 for_expression_stmt: LPAREN var_dec_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

   96 $@15: /* empty */

   97 for_expression_stmt: LPAREN assign_stmt expr $@15 SEMICOLON expr RPAREN LBRACE stmts RBRACE

   98 $@16: /* empty */

   99 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE $@16 case_stmts RBRACE

  100 case_stmts: case_stmts case_stmt
  101           | case_stmt

  102 case_stmt: CASE value COLON stmts
  103          | DEFAULT COLON stmts

  104 type: INT
  105     | FLOAT
  106     | CHAR
  107     | STRING
  108     | BOOL

  109 function: function_prototype LBRACE stmts RBRACE

  110 $@17: /* empty */

  111 function_prototype: VOID IDENTIFIER LPAREN $@17 params RPAREN

  112 $@18: /* empty */

  113 function_prototype: VOID IDENTIFIER LPAREN $@18 RPAREN

  114 $@19: /* empty */

  115 function_prototype: type IDENTIFIER LPAREN $@19 params RPAREN

  116 $@20: /* empty */

  117 function_prototype: type IDENTIFIER LPAREN $@20 RPAREN

  118 params: param
  119       | params COMMA param

  120 param: type IDENTIFIER
  121      | type IDENTIFIER ASSIGN constant


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 104
FLOAT (259) 105
CHAR (260) 106
BOOL (261) 108
STRING (262) 107
IDENTIFIER (263) 40 41 57 59 61 70 71 72 73 74 75 76 77 111 113 115
    117 120 121
INT_VAL (264) 53 64
FLOAT_VAL (265) 54 65
CHAR_VAL (266) 23 67
STRING_VAL (267) 22 66
TRUE_VAL (268) 36 68
FALSE_VAL (269) 37 69
CONST (270) 70
SEMICOLON (271) 3 15 16 17 18 70 71 72 73 74 75 76 77 91 95 97
COMMA (272) 62 119
LBRACE (273) 5 80 84 86 91 95 97 99 109
RBRACE (274) 5 80 84 86 91 95 97 99 109
LPAREN (275) 18 35 52 59 61 80 84 91 95 97 99 111 113 115 117
RPAREN (276) 18 35 52 59 61 80 84 91 95 97 99 111 113 115 117
BREAK (277) 16
CONTINUE (278) 17
WHILE (279) 80
FOR (280) 93
SWITCH (281) 99
CASE (282) 102
DEFAULT (283) 103
COLON (284) 102 103
IF (285) 84
ELSE (286) 86
REPEAT (287) 91
UNTIL (288) 91
LE (289) 31
GE (290) 30
NE (291) 27
EQUAL (292) 26
LESS (293) 29
GREATER (294) 28
MINUS (295) 44 50
PLUS (296) 43
MOD (297) 48
DIV (298) 47
MULT (299) 46
EXP (300) 55
OR (301) 33
AND (302) 32
NOT (303) 34
ASSIGN (304) 70 72 73 121
DIV_EQ (305) 74
PLUS_EQ (306) 76
MINUS_EQ (307) 77
MULT_EQ (308) 75
INC (309) 40
DEC (310) 41
UMINUS (311)
VOID (312) 111 113
RETURN (313) 15
PRINT (314) 18


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
stmts (61)
    on left: 1 2, on right: 0 1 5 80 84 86 91 95 97 102 103 109
stmt (62)
    on left: 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 1 2
$@1 (63)
    on left: 4, on right: 5
ret_val (64)
    on left: 19 20, on right: 15
value (65)
    on left: 21 22 23, on right: 18 19 62 63 72 73 74 75 76 77 102
expr (66)
    on left: 24 25, on right: 3 21 26 27 28 29 30 31 32 33 34 80 84
    91 95 97 99
bool_expr (67)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37, on right: 24 35
arithmetic_expr (68)
    on left: 38 39, on right: 25 26 27 28 29 30 31
unary_expr (69)
    on left: 40 41, on right: 39
binary_expr (70)
    on left: 42 43 44, on right: 38 43 44 52
term (71)
    on left: 45 46 47 48, on right: 42 43 44 46 47 48
negat (72)
    on left: 49 50, on right: 45
para (73)
    on left: 51 52, on right: 49 50
factor (74)
    on left: 53 54 55 56 57, on right: 46 47 48 51 55
function_call (75)
    on left: 59 61, on right: 56
$@2 (76)
    on left: 58, on right: 59
$@3 (77)
    on left: 60, on right: 61
call_params (78)
    on left: 62 63, on right: 61 62
constant (79)
    on left: 64 65 66 67 68 69, on right: 70 121
const_dec_stmt (80)
    on left: 70, on right: 6
var_dec_stmt (81)
    on left: 71 72, on right: 7 95
assign_stmt (82)
    on left: 73 74 75 76 77, on right: 8 97
while_stmt (83)
    on left: 80, on right: 9
$@4 (84)
    on left: 78, on right: 80
$@5 (85)
    on left: 79, on right: 80
if_stmt (86)
    on left: 84, on right: 10
$@6 (87)
    on left: 81, on right: 84
$@7 (88)
    on left: 82, on right: 84
$@8 (89)
    on left: 83, on right: 84
if_expression_stmt (90)
    on left: 86 87, on right: 84
$@9 (91)
    on left: 85, on right: 86
repeat_until_stmt (92)
    on left: 91, on right: 11
$@10 (93)
    on left: 88, on right: 91
$@11 (94)
    on left: 89, on right: 91
$@12 (95)
    on left: 90, on right: 91
for_stmt (96)
    on left: 93, on right: 12
$@13 (97)
    on left: 92, on right: 93
for_expression_stmt (98)
    on left: 95 97, on right: 93
$@14 (99)
    on left: 94, on right: 95
$@15 (100)
    on left: 96, on right: 97
switch_stmt (101)
    on left: 99, on right: 13
$@16 (102)
    on left: 98, on right: 99
case_stmts (103)
    on left: 100 101, on right: 99 100
case_stmt (104)
    on left: 102 103, on right: 100 101
type (105)
    on left: 104 105 106 107 108, on right: 70 71 72 115 117 120 121
function (106)
    on left: 109, on right: 14
function_prototype (107)
    on left: 111 113 115 117, on right: 109
$@17 (108)
    on left: 110, on right: 111
$@18 (109)
    on left: 112, on right: 113
$@19 (110)
    on left: 114, on right: 115
$@20 (111)
    on left: 116, on right: 117
params (112)
    on left: 118 119, on right: 111 115 119
param (113)
    on left: 120 121, on right: 118 119


state 0

    0 $accept: . stmts $end

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 26
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 1

  104 type: INT .

    $default  reduce using rule 104 (type)


state 2

  105 type: FLOAT .

    $default  reduce using rule 105 (type)


state 3

  106 type: CHAR .

    $default  reduce using rule 106 (type)


state 4

  108 type: BOOL .

    $default  reduce using rule 108 (type)


state 5

  107 type: STRING .

    $default  reduce using rule 107 (type)


state 6

   40 unary_expr: IDENTIFIER . INC
   41           | IDENTIFIER . DEC
   57 factor: IDENTIFIER .
   59 function_call: IDENTIFIER . LPAREN $@2 RPAREN
   61              | IDENTIFIER . LPAREN $@3 call_params RPAREN
   73 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   74            | IDENTIFIER . DIV_EQ value SEMICOLON
   75            | IDENTIFIER . MULT_EQ value SEMICOLON
   76            | IDENTIFIER . PLUS_EQ value SEMICOLON
   77            | IDENTIFIER . MINUS_EQ value SEMICOLON

    LPAREN    shift, and go to state 49
    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54
    INC       shift, and go to state 55
    DEC       shift, and go to state 56

    $default  reduce using rule 57 (factor)


state 7

   53 factor: INT_VAL .

    $default  reduce using rule 53 (factor)


state 8

   54 factor: FLOAT_VAL .

    $default  reduce using rule 54 (factor)


state 9

   36 bool_expr: TRUE_VAL .

    $default  reduce using rule 36 (bool_expr)


state 10

   37 bool_expr: FALSE_VAL .

    $default  reduce using rule 37 (bool_expr)


state 11

   70 const_dec_stmt: CONST . type IDENTIFIER ASSIGN constant SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type  go to state 57


state 12

    5 stmt: LBRACE . $@1 stmts RBRACE

    $default  reduce using rule 4 ($@1)

    $@1  go to state 58


state 13

   35 bool_expr: LPAREN . bool_expr RPAREN
   52 para: LPAREN . binary_expr RPAREN

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 60
    bool_expr        go to state 61
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 62
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 14

   16 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 15

   17 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 64


state 16

   80 while_stmt: WHILE . LPAREN expr $@4 RPAREN LBRACE $@5 stmts RBRACE

    LPAREN  shift, and go to state 65


state 17

   93 for_stmt: FOR . $@13 for_expression_stmt

    $default  reduce using rule 92 ($@13)

    $@13  go to state 66


state 18

   99 switch_stmt: SWITCH . LPAREN expr RPAREN LBRACE $@16 case_stmts RBRACE

    LPAREN  shift, and go to state 67


state 19

   84 if_stmt: IF . LPAREN expr $@6 RPAREN LBRACE $@7 stmts RBRACE $@8 if_expression_stmt

    LPAREN  shift, and go to state 68


state 20

   91 repeat_until_stmt: REPEAT . LBRACE $@10 stmts RBRACE $@11 UNTIL LPAREN expr $@12 RPAREN SEMICOLON

    LBRACE  shift, and go to state 69


state 21

   50 negat: MINUS . para

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71

    para           go to state 72
    factor         go to state 36
    function_call  go to state 37


state 22

   34 bool_expr: NOT . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 73
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 23

  111 function_prototype: VOID . IDENTIFIER LPAREN $@17 params RPAREN
  113                   | VOID . IDENTIFIER LPAREN $@18 RPAREN

    IDENTIFIER  shift, and go to state 74


state 24

   15 stmt: RETURN . ret_val SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    $default  reduce using rule 20 (ret_val)

    ret_val          go to state 77
    value            go to state 78
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 25

   18 stmt: PRINT . LPAREN value RPAREN SEMICOLON

    LPAREN  shift, and go to state 80


state 26

    0 $accept: stmts . $end
    1 stmts: stmts . stmt

    $end        shift, and go to state 81
    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 27

    2 stmts: stmt .

    $default  reduce using rule 2 (stmts)


state 28

    3 stmt: expr . SEMICOLON
   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    SEMICOLON  shift, and go to state 83
    LE         shift, and go to state 84
    GE         shift, and go to state 85
    NE         shift, and go to state 86
    EQUAL      shift, and go to state 87
    LESS       shift, and go to state 88
    GREATER    shift, and go to state 89
    OR         shift, and go to state 90
    AND        shift, and go to state 91


state 29

   24 expr: bool_expr .

    $default  reduce using rule 24 (expr)


state 30

   25 expr: arithmetic_expr .

    $default  reduce using rule 25 (expr)


state 31

   39 arithmetic_expr: unary_expr .

    $default  reduce using rule 39 (arithmetic_expr)


state 32

   38 arithmetic_expr: binary_expr .
   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term

    MINUS  shift, and go to state 92
    PLUS   shift, and go to state 93

    $default  reduce using rule 38 (arithmetic_expr)


state 33

   42 binary_expr: term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 42 (binary_expr)


state 34

   45 term: negat .

    $default  reduce using rule 45 (term)


state 35

   49 negat: para .

    $default  reduce using rule 49 (negat)


state 36

   51 para: factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 51 (para)


state 37

   56 factor: function_call .

    $default  reduce using rule 56 (factor)


state 38

    6 stmt: const_dec_stmt .

    $default  reduce using rule 6 (stmt)


state 39

    7 stmt: var_dec_stmt .

    $default  reduce using rule 7 (stmt)


state 40

    8 stmt: assign_stmt .

    $default  reduce using rule 8 (stmt)


state 41

    9 stmt: while_stmt .

    $default  reduce using rule 9 (stmt)


state 42

   10 stmt: if_stmt .

    $default  reduce using rule 10 (stmt)


state 43

   11 stmt: repeat_until_stmt .

    $default  reduce using rule 11 (stmt)


state 44

   12 stmt: for_stmt .

    $default  reduce using rule 12 (stmt)


state 45

   13 stmt: switch_stmt .

    $default  reduce using rule 13 (stmt)


state 46

   71 var_dec_stmt: type . IDENTIFIER SEMICOLON
   72             | type . IDENTIFIER ASSIGN value SEMICOLON
  115 function_prototype: type . IDENTIFIER LPAREN $@19 params RPAREN
  117                   | type . IDENTIFIER LPAREN $@20 RPAREN

    IDENTIFIER  shift, and go to state 98


state 47

   14 stmt: function .

    $default  reduce using rule 14 (stmt)


state 48

  109 function: function_prototype . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 99


state 49

   59 function_call: IDENTIFIER LPAREN . $@2 RPAREN
   61              | IDENTIFIER LPAREN . $@3 call_params RPAREN

    RPAREN    reduce using rule 58 ($@2)
    $default  reduce using rule 60 ($@3)

    $@2  go to state 100
    $@3  go to state 101


state 50

   73 assign_stmt: IDENTIFIER ASSIGN . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 102
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 51

   74 assign_stmt: IDENTIFIER DIV_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 103
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 52

   76 assign_stmt: IDENTIFIER PLUS_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 104
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 53

   77 assign_stmt: IDENTIFIER MINUS_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 105
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 54

   75 assign_stmt: IDENTIFIER MULT_EQ . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 106
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 55

   40 unary_expr: IDENTIFIER INC .

    $default  reduce using rule 40 (unary_expr)


state 56

   41 unary_expr: IDENTIFIER DEC .

    $default  reduce using rule 41 (unary_expr)


state 57

   70 const_dec_stmt: CONST type . IDENTIFIER ASSIGN constant SEMICOLON

    IDENTIFIER  shift, and go to state 107


state 58

    5 stmt: LBRACE $@1 . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 108
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 59

   40 unary_expr: IDENTIFIER . INC
   41           | IDENTIFIER . DEC
   57 factor: IDENTIFIER .
   59 function_call: IDENTIFIER . LPAREN $@2 RPAREN
   61              | IDENTIFIER . LPAREN $@3 call_params RPAREN

    LPAREN  shift, and go to state 49
    INC     shift, and go to state 55
    DEC     shift, and go to state 56

    $default  reduce using rule 57 (factor)


state 60

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 61

   24 expr: bool_expr .
   35 bool_expr: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 109

    $default  reduce using rule 24 (expr)


state 62

   38 arithmetic_expr: binary_expr .
   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term
   52 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 110
    MINUS   shift, and go to state 92
    PLUS    shift, and go to state 93

    $default  reduce using rule 38 (arithmetic_expr)


state 63

   16 stmt: BREAK SEMICOLON .

    $default  reduce using rule 16 (stmt)


state 64

   17 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 17 (stmt)


state 65

   80 while_stmt: WHILE LPAREN . expr $@4 RPAREN LBRACE $@5 stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 111
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 66

   93 for_stmt: FOR $@13 . for_expression_stmt

    LPAREN  shift, and go to state 112

    for_expression_stmt  go to state 113


state 67

   99 switch_stmt: SWITCH LPAREN . expr RPAREN LBRACE $@16 case_stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 114
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 68

   84 if_stmt: IF LPAREN . expr $@6 RPAREN LBRACE $@7 stmts RBRACE $@8 if_expression_stmt

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 115
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 69

   91 repeat_until_stmt: REPEAT LBRACE . $@10 stmts RBRACE $@11 UNTIL LPAREN expr $@12 RPAREN SEMICOLON

    $default  reduce using rule 88 ($@10)

    $@10  go to state 116


state 70

   57 factor: IDENTIFIER .
   59 function_call: IDENTIFIER . LPAREN $@2 RPAREN
   61              | IDENTIFIER . LPAREN $@3 call_params RPAREN

    LPAREN  shift, and go to state 49

    $default  reduce using rule 57 (factor)


state 71

   52 para: LPAREN . binary_expr RPAREN

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    binary_expr    go to state 117
    term           go to state 33
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 72

   50 negat: MINUS para .

    $default  reduce using rule 50 (negat)


state 73

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   34          | NOT expr .

    $default  reduce using rule 34 (bool_expr)


state 74

  111 function_prototype: VOID IDENTIFIER . LPAREN $@17 params RPAREN
  113                   | VOID IDENTIFIER . LPAREN $@18 RPAREN

    LPAREN  shift, and go to state 118


state 75

   23 value: CHAR_VAL .

    $default  reduce using rule 23 (value)


state 76

   22 value: STRING_VAL .

    $default  reduce using rule 22 (value)


state 77

   15 stmt: RETURN ret_val . SEMICOLON

    SEMICOLON  shift, and go to state 119


state 78

   19 ret_val: value .

    $default  reduce using rule 19 (ret_val)


state 79

   21 value: expr .
   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91

    $default  reduce using rule 21 (value)


state 80

   18 stmt: PRINT LPAREN . value RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 120
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 81

    0 $accept: stmts $end .

    $default  accept


state 82

    1 stmts: stmts stmt .

    $default  reduce using rule 1 (stmts)


state 83

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


state 84

   31 bool_expr: expr LE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 121
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 85

   30 bool_expr: expr GE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 122
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 86

   27 bool_expr: expr NE . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 123
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 87

   26 bool_expr: expr EQUAL . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 124
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 88

   29 bool_expr: expr LESS . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 125
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 89

   28 bool_expr: expr GREATER . arithmetic_expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    arithmetic_expr  go to state 126
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 90

   33 bool_expr: expr OR . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 127
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 91

   32 bool_expr: expr AND . expr

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 128
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 92

   44 binary_expr: binary_expr MINUS . term

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    term           go to state 129
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 93

   43 binary_expr: binary_expr PLUS . term

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 21

    term           go to state 130
    negat          go to state 34
    para           go to state 35
    factor         go to state 36
    function_call  go to state 37


state 94

   48 term: term MOD . factor

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 131
    function_call  go to state 37


state 95

   47 term: term DIV . factor

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 132
    function_call  go to state 37


state 96

   46 term: term MULT . factor

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 133
    function_call  go to state 37


state 97

   55 factor: factor EXP . factor

    IDENTIFIER  shift, and go to state 70
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8

    factor         go to state 134
    function_call  go to state 37


state 98

   71 var_dec_stmt: type IDENTIFIER . SEMICOLON
   72             | type IDENTIFIER . ASSIGN value SEMICOLON
  115 function_prototype: type IDENTIFIER . LPAREN $@19 params RPAREN
  117                   | type IDENTIFIER . LPAREN $@20 RPAREN

    SEMICOLON  shift, and go to state 135
    LPAREN     shift, and go to state 136
    ASSIGN     shift, and go to state 137


state 99

  109 function: function_prototype LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 138
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 100

   59 function_call: IDENTIFIER LPAREN $@2 . RPAREN

    RPAREN  shift, and go to state 139


state 101

   61 function_call: IDENTIFIER LPAREN $@3 . call_params RPAREN

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 140
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37
    call_params      go to state 141


state 102

   73 assign_stmt: IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 142


state 103

   74 assign_stmt: IDENTIFIER DIV_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 143


state 104

   76 assign_stmt: IDENTIFIER PLUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 144


state 105

   77 assign_stmt: IDENTIFIER MINUS_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 145


state 106

   75 assign_stmt: IDENTIFIER MULT_EQ value . SEMICOLON

    SEMICOLON  shift, and go to state 146


state 107

   70 const_dec_stmt: CONST type IDENTIFIER . ASSIGN constant SEMICOLON

    ASSIGN  shift, and go to state 147


state 108

    1 stmts: stmts . stmt
    5 stmt: LBRACE $@1 stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 148
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 109

   35 bool_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 35 (bool_expr)


state 110

   52 para: LPAREN binary_expr RPAREN .

    $default  reduce using rule 52 (para)


state 111

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   80 while_stmt: WHILE LPAREN expr . $@4 RPAREN LBRACE $@5 stmts RBRACE

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91

    $default  reduce using rule 78 ($@4)

    $@4  go to state 149


state 112

   95 for_expression_stmt: LPAREN . var_dec_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE
   97                    | LPAREN . assign_stmt expr $@15 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 150

    var_dec_stmt  go to state 151
    assign_stmt   go to state 152
    type          go to state 153


state 113

   93 for_stmt: FOR $@13 for_expression_stmt .

    $default  reduce using rule 93 (for_stmt)


state 114

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   99 switch_stmt: SWITCH LPAREN expr . RPAREN LBRACE $@16 case_stmts RBRACE

    RPAREN   shift, and go to state 154
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 115

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   84 if_stmt: IF LPAREN expr . $@6 RPAREN LBRACE $@7 stmts RBRACE $@8 if_expression_stmt

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91

    $default  reduce using rule 81 ($@6)

    $@6  go to state 155


state 116

   91 repeat_until_stmt: REPEAT LBRACE $@10 . stmts RBRACE $@11 UNTIL LPAREN expr $@12 RPAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 156
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 117

   43 binary_expr: binary_expr . PLUS term
   44            | binary_expr . MINUS term
   52 para: LPAREN binary_expr . RPAREN

    RPAREN  shift, and go to state 110
    MINUS   shift, and go to state 92
    PLUS    shift, and go to state 93


state 118

  111 function_prototype: VOID IDENTIFIER LPAREN . $@17 params RPAREN
  113                   | VOID IDENTIFIER LPAREN . $@18 RPAREN

    RPAREN    reduce using rule 112 ($@18)
    $default  reduce using rule 110 ($@17)

    $@17  go to state 157
    $@18  go to state 158


state 119

   15 stmt: RETURN ret_val SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 120

   18 stmt: PRINT LPAREN value . RPAREN SEMICOLON

    RPAREN  shift, and go to state 159


state 121

   31 bool_expr: expr LE arithmetic_expr .

    $default  reduce using rule 31 (bool_expr)


state 122

   30 bool_expr: expr GE arithmetic_expr .

    $default  reduce using rule 30 (bool_expr)


state 123

   27 bool_expr: expr NE arithmetic_expr .

    $default  reduce using rule 27 (bool_expr)


state 124

   26 bool_expr: expr EQUAL arithmetic_expr .

    $default  reduce using rule 26 (bool_expr)


state 125

   29 bool_expr: expr LESS arithmetic_expr .

    $default  reduce using rule 29 (bool_expr)


state 126

   28 bool_expr: expr GREATER arithmetic_expr .

    $default  reduce using rule 28 (bool_expr)


state 127

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   33          | expr OR expr .

    $default  reduce using rule 33 (bool_expr)


state 128

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   32          | expr AND expr .
   33          | expr . OR expr

    $default  reduce using rule 32 (bool_expr)


state 129

   44 binary_expr: binary_expr MINUS term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 44 (binary_expr)


state 130

   43 binary_expr: binary_expr PLUS term .
   46 term: term . MULT factor
   47     | term . DIV factor
   48     | term . MOD factor

    MOD   shift, and go to state 94
    DIV   shift, and go to state 95
    MULT  shift, and go to state 96

    $default  reduce using rule 43 (binary_expr)


state 131

   48 term: term MOD factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 48 (term)


state 132

   47 term: term DIV factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 47 (term)


state 133

   46 term: term MULT factor .
   55 factor: factor . EXP factor

    EXP  shift, and go to state 97

    $default  reduce using rule 46 (term)


state 134

   55 factor: factor . EXP factor
   55       | factor EXP factor .

    $default  reduce using rule 55 (factor)


state 135

   71 var_dec_stmt: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 71 (var_dec_stmt)


state 136

  115 function_prototype: type IDENTIFIER LPAREN . $@19 params RPAREN
  117                   | type IDENTIFIER LPAREN . $@20 RPAREN

    RPAREN    reduce using rule 116 ($@20)
    $default  reduce using rule 114 ($@19)

    $@19  go to state 160
    $@20  go to state 161


state 137

   72 var_dec_stmt: type IDENTIFIER ASSIGN . value SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 162
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 138

    1 stmts: stmts . stmt
  109 function: function_prototype LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 163
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 139

   59 function_call: IDENTIFIER LPAREN $@2 RPAREN .

    $default  reduce using rule 59 (function_call)


state 140

   63 call_params: value .

    $default  reduce using rule 63 (call_params)


state 141

   61 function_call: IDENTIFIER LPAREN $@3 call_params . RPAREN
   62 call_params: call_params . COMMA value

    COMMA   shift, and go to state 164
    RPAREN  shift, and go to state 165


state 142

   73 assign_stmt: IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 73 (assign_stmt)


state 143

   74 assign_stmt: IDENTIFIER DIV_EQ value SEMICOLON .

    $default  reduce using rule 74 (assign_stmt)


state 144

   76 assign_stmt: IDENTIFIER PLUS_EQ value SEMICOLON .

    $default  reduce using rule 76 (assign_stmt)


state 145

   77 assign_stmt: IDENTIFIER MINUS_EQ value SEMICOLON .

    $default  reduce using rule 77 (assign_stmt)


state 146

   75 assign_stmt: IDENTIFIER MULT_EQ value SEMICOLON .

    $default  reduce using rule 75 (assign_stmt)


state 147

   70 const_dec_stmt: CONST type IDENTIFIER ASSIGN . constant SEMICOLON

    INT_VAL     shift, and go to state 166
    FLOAT_VAL   shift, and go to state 167
    CHAR_VAL    shift, and go to state 168
    STRING_VAL  shift, and go to state 169
    TRUE_VAL    shift, and go to state 170
    FALSE_VAL   shift, and go to state 171

    constant  go to state 172


state 148

    5 stmt: LBRACE $@1 stmts RBRACE .

    $default  reduce using rule 5 (stmt)


state 149

   80 while_stmt: WHILE LPAREN expr $@4 . RPAREN LBRACE $@5 stmts RBRACE

    RPAREN  shift, and go to state 173


state 150

   73 assign_stmt: IDENTIFIER . ASSIGN value SEMICOLON
   74            | IDENTIFIER . DIV_EQ value SEMICOLON
   75            | IDENTIFIER . MULT_EQ value SEMICOLON
   76            | IDENTIFIER . PLUS_EQ value SEMICOLON
   77            | IDENTIFIER . MINUS_EQ value SEMICOLON

    ASSIGN    shift, and go to state 50
    DIV_EQ    shift, and go to state 51
    PLUS_EQ   shift, and go to state 52
    MINUS_EQ  shift, and go to state 53
    MULT_EQ   shift, and go to state 54


state 151

   95 for_expression_stmt: LPAREN var_dec_stmt . expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 174
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 152

   97 for_expression_stmt: LPAREN assign_stmt . expr $@15 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 175
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 153

   71 var_dec_stmt: type . IDENTIFIER SEMICOLON
   72             | type . IDENTIFIER ASSIGN value SEMICOLON

    IDENTIFIER  shift, and go to state 176


state 154

   99 switch_stmt: SWITCH LPAREN expr RPAREN . LBRACE $@16 case_stmts RBRACE

    LBRACE  shift, and go to state 177


state 155

   84 if_stmt: IF LPAREN expr $@6 . RPAREN LBRACE $@7 stmts RBRACE $@8 if_expression_stmt

    RPAREN  shift, and go to state 178


state 156

    1 stmts: stmts . stmt
   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts . RBRACE $@11 UNTIL LPAREN expr $@12 RPAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 179
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 157

  111 function_prototype: VOID IDENTIFIER LPAREN $@17 . params RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type    go to state 180
    params  go to state 181
    param   go to state 182


state 158

  113 function_prototype: VOID IDENTIFIER LPAREN $@18 . RPAREN

    RPAREN  shift, and go to state 183


state 159

   18 stmt: PRINT LPAREN value RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 184


state 160

  115 function_prototype: type IDENTIFIER LPAREN $@19 . params RPAREN

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type    go to state 180
    params  go to state 185
    param   go to state 182


state 161

  117 function_prototype: type IDENTIFIER LPAREN $@20 . RPAREN

    RPAREN  shift, and go to state 186


state 162

   72 var_dec_stmt: type IDENTIFIER ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 187


state 163

  109 function: function_prototype LBRACE stmts RBRACE .

    $default  reduce using rule 109 (function)


state 164

   62 call_params: call_params COMMA . value

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 188
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 165

   61 function_call: IDENTIFIER LPAREN $@3 call_params RPAREN .

    $default  reduce using rule 61 (function_call)


state 166

   64 constant: INT_VAL .

    $default  reduce using rule 64 (constant)


state 167

   65 constant: FLOAT_VAL .

    $default  reduce using rule 65 (constant)


state 168

   67 constant: CHAR_VAL .

    $default  reduce using rule 67 (constant)


state 169

   66 constant: STRING_VAL .

    $default  reduce using rule 66 (constant)


state 170

   68 constant: TRUE_VAL .

    $default  reduce using rule 68 (constant)


state 171

   69 constant: FALSE_VAL .

    $default  reduce using rule 69 (constant)


state 172

   70 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant . SEMICOLON

    SEMICOLON  shift, and go to state 189


state 173

   80 while_stmt: WHILE LPAREN expr $@4 RPAREN . LBRACE $@5 stmts RBRACE

    LBRACE  shift, and go to state 190


state 174

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   95 for_expression_stmt: LPAREN var_dec_stmt expr . $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91

    $default  reduce using rule 94 ($@14)

    $@14  go to state 191


state 175

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   97 for_expression_stmt: LPAREN assign_stmt expr . $@15 SEMICOLON expr RPAREN LBRACE stmts RBRACE

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91

    $default  reduce using rule 96 ($@15)

    $@15  go to state 192


state 176

   71 var_dec_stmt: type IDENTIFIER . SEMICOLON
   72             | type IDENTIFIER . ASSIGN value SEMICOLON

    SEMICOLON  shift, and go to state 135
    ASSIGN     shift, and go to state 137


state 177

   99 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE . $@16 case_stmts RBRACE

    $default  reduce using rule 98 ($@16)

    $@16  go to state 193


state 178

   84 if_stmt: IF LPAREN expr $@6 RPAREN . LBRACE $@7 stmts RBRACE $@8 if_expression_stmt

    LBRACE  shift, and go to state 194


state 179

   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE . $@11 UNTIL LPAREN expr $@12 RPAREN SEMICOLON

    $default  reduce using rule 89 ($@11)

    $@11  go to state 195


state 180

  120 param: type . IDENTIFIER
  121      | type . IDENTIFIER ASSIGN constant

    IDENTIFIER  shift, and go to state 196


state 181

  111 function_prototype: VOID IDENTIFIER LPAREN $@17 params . RPAREN
  119 params: params . COMMA param

    COMMA   shift, and go to state 197
    RPAREN  shift, and go to state 198


state 182

  118 params: param .

    $default  reduce using rule 118 (params)


state 183

  113 function_prototype: VOID IDENTIFIER LPAREN $@18 RPAREN .

    $default  reduce using rule 113 (function_prototype)


state 184

   18 stmt: PRINT LPAREN value RPAREN SEMICOLON .

    $default  reduce using rule 18 (stmt)


state 185

  115 function_prototype: type IDENTIFIER LPAREN $@19 params . RPAREN
  119 params: params . COMMA param

    COMMA   shift, and go to state 197
    RPAREN  shift, and go to state 199


state 186

  117 function_prototype: type IDENTIFIER LPAREN $@20 RPAREN .

    $default  reduce using rule 117 (function_prototype)


state 187

   72 var_dec_stmt: type IDENTIFIER ASSIGN value SEMICOLON .

    $default  reduce using rule 72 (var_dec_stmt)


state 188

   62 call_params: call_params COMMA value .

    $default  reduce using rule 62 (call_params)


state 189

   70 const_dec_stmt: CONST type IDENTIFIER ASSIGN constant SEMICOLON .

    $default  reduce using rule 70 (const_dec_stmt)


state 190

   80 while_stmt: WHILE LPAREN expr $@4 RPAREN LBRACE . $@5 stmts RBRACE

    $default  reduce using rule 79 ($@5)

    $@5  go to state 200


state 191

   95 for_expression_stmt: LPAREN var_dec_stmt expr $@14 . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 201


state 192

   97 for_expression_stmt: LPAREN assign_stmt expr $@15 . SEMICOLON expr RPAREN LBRACE stmts RBRACE

    SEMICOLON  shift, and go to state 202


state 193

   99 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE $@16 . case_stmts RBRACE

    CASE     shift, and go to state 203
    DEFAULT  shift, and go to state 204

    case_stmts  go to state 205
    case_stmt   go to state 206


state 194

   84 if_stmt: IF LPAREN expr $@6 RPAREN LBRACE . $@7 stmts RBRACE $@8 if_expression_stmt

    $default  reduce using rule 82 ($@7)

    $@7  go to state 207


state 195

   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE $@11 . UNTIL LPAREN expr $@12 RPAREN SEMICOLON

    UNTIL  shift, and go to state 208


state 196

  120 param: type IDENTIFIER .
  121      | type IDENTIFIER . ASSIGN constant

    ASSIGN  shift, and go to state 209

    $default  reduce using rule 120 (param)


state 197

  119 params: params COMMA . param

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5

    type   go to state 180
    param  go to state 210


state 198

  111 function_prototype: VOID IDENTIFIER LPAREN $@17 params RPAREN .

    $default  reduce using rule 111 (function_prototype)


state 199

  115 function_prototype: type IDENTIFIER LPAREN $@19 params RPAREN .

    $default  reduce using rule 115 (function_prototype)


state 200

   80 while_stmt: WHILE LPAREN expr $@4 RPAREN LBRACE $@5 . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 211
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 201

   95 for_expression_stmt: LPAREN var_dec_stmt expr $@14 SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 212
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 202

   97 for_expression_stmt: LPAREN assign_stmt expr $@15 SEMICOLON . expr RPAREN LBRACE stmts RBRACE

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 213
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 203

  102 case_stmt: CASE . value COLON stmts

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    CHAR_VAL    shift, and go to state 75
    STRING_VAL  shift, and go to state 76
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    value            go to state 214
    expr             go to state 79
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 204

  103 case_stmt: DEFAULT . COLON stmts

    COLON  shift, and go to state 215


state 205

   99 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE $@16 case_stmts . RBRACE
  100 case_stmts: case_stmts . case_stmt

    RBRACE   shift, and go to state 216
    CASE     shift, and go to state 203
    DEFAULT  shift, and go to state 204

    case_stmt  go to state 217


state 206

  101 case_stmts: case_stmt .

    $default  reduce using rule 101 (case_stmts)


state 207

   84 if_stmt: IF LPAREN expr $@6 RPAREN LBRACE $@7 . stmts RBRACE $@8 if_expression_stmt

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 218
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 208

   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE $@11 UNTIL . LPAREN expr $@12 RPAREN SEMICOLON

    LPAREN  shift, and go to state 219


state 209

  121 param: type IDENTIFIER ASSIGN . constant

    INT_VAL     shift, and go to state 166
    FLOAT_VAL   shift, and go to state 167
    CHAR_VAL    shift, and go to state 168
    STRING_VAL  shift, and go to state 169
    TRUE_VAL    shift, and go to state 170
    FALSE_VAL   shift, and go to state 171

    constant  go to state 220


state 210

  119 params: params COMMA param .

    $default  reduce using rule 119 (params)


state 211

    1 stmts: stmts . stmt
   80 while_stmt: WHILE LPAREN expr $@4 RPAREN LBRACE $@5 stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 221
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 212

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   95 for_expression_stmt: LPAREN var_dec_stmt expr $@14 SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 222
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 213

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   97 for_expression_stmt: LPAREN assign_stmt expr $@15 SEMICOLON expr . RPAREN LBRACE stmts RBRACE

    RPAREN   shift, and go to state 223
    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91


state 214

  102 case_stmt: CASE value . COLON stmts

    COLON  shift, and go to state 224


state 215

  103 case_stmt: DEFAULT COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 225
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 216

   99 switch_stmt: SWITCH LPAREN expr RPAREN LBRACE $@16 case_stmts RBRACE .

    $default  reduce using rule 99 (switch_stmt)


state 217

  100 case_stmts: case_stmts case_stmt .

    $default  reduce using rule 100 (case_stmts)


state 218

    1 stmts: stmts . stmt
   84 if_stmt: IF LPAREN expr $@6 RPAREN LBRACE $@7 stmts . RBRACE $@8 if_expression_stmt

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 226
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 219

   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE $@11 UNTIL LPAREN . expr $@12 RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 59
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    LPAREN      shift, and go to state 13
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22

    expr             go to state 227
    bool_expr        go to state 29
    arithmetic_expr  go to state 30
    unary_expr       go to state 31
    binary_expr      go to state 32
    term             go to state 33
    negat            go to state 34
    para             go to state 35
    factor           go to state 36
    function_call    go to state 37


state 220

  121 param: type IDENTIFIER ASSIGN constant .

    $default  reduce using rule 121 (param)


state 221

   80 while_stmt: WHILE LPAREN expr $@4 RPAREN LBRACE $@5 stmts RBRACE .

    $default  reduce using rule 80 (while_stmt)


state 222

   95 for_expression_stmt: LPAREN var_dec_stmt expr $@14 SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 228


state 223

   97 for_expression_stmt: LPAREN assign_stmt expr $@15 SEMICOLON expr RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 229


state 224

  102 case_stmt: CASE value COLON . stmts

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 230
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 225

    1 stmts: stmts . stmt
  103 case_stmt: DEFAULT COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 103 (case_stmt)

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 226

   84 if_stmt: IF LPAREN expr $@6 RPAREN LBRACE $@7 stmts RBRACE . $@8 if_expression_stmt

    $default  reduce using rule 83 ($@8)

    $@8  go to state 231


state 227

   26 bool_expr: expr . EQUAL arithmetic_expr
   27          | expr . NE arithmetic_expr
   28          | expr . GREATER arithmetic_expr
   29          | expr . LESS arithmetic_expr
   30          | expr . GE arithmetic_expr
   31          | expr . LE arithmetic_expr
   32          | expr . AND expr
   33          | expr . OR expr
   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE $@11 UNTIL LPAREN expr . $@12 RPAREN SEMICOLON

    LE       shift, and go to state 84
    GE       shift, and go to state 85
    NE       shift, and go to state 86
    EQUAL    shift, and go to state 87
    LESS     shift, and go to state 88
    GREATER  shift, and go to state 89
    OR       shift, and go to state 90
    AND      shift, and go to state 91

    $default  reduce using rule 90 ($@12)

    $@12  go to state 232


state 228

   95 for_expression_stmt: LPAREN var_dec_stmt expr $@14 SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 233
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 229

   97 for_expression_stmt: LPAREN assign_stmt expr $@15 SEMICOLON expr RPAREN LBRACE . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 234
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 230

    1 stmts: stmts . stmt
  102 case_stmt: CASE value COLON stmts .

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    $default  reduce using rule 102 (case_stmt)

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 231

   84 if_stmt: IF LPAREN expr $@6 RPAREN LBRACE $@7 stmts RBRACE $@8 . if_expression_stmt

    ELSE  shift, and go to state 235

    $default  reduce using rule 87 (if_expression_stmt)

    if_expression_stmt  go to state 236


state 232

   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE $@11 UNTIL LPAREN expr $@12 . RPAREN SEMICOLON

    RPAREN  shift, and go to state 237


state 233

    1 stmts: stmts . stmt
   95 for_expression_stmt: LPAREN var_dec_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 238
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 234

    1 stmts: stmts . stmt
   97 for_expression_stmt: LPAREN assign_stmt expr $@15 SEMICOLON expr RPAREN LBRACE stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 239
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 235

   86 if_expression_stmt: ELSE . LBRACE $@9 stmts RBRACE

    LBRACE  shift, and go to state 240


state 236

   84 if_stmt: IF LPAREN expr $@6 RPAREN LBRACE $@7 stmts RBRACE $@8 if_expression_stmt .

    $default  reduce using rule 84 (if_stmt)


state 237

   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE $@11 UNTIL LPAREN expr $@12 RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 241


state 238

   95 for_expression_stmt: LPAREN var_dec_stmt expr $@14 SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 95 (for_expression_stmt)


state 239

   97 for_expression_stmt: LPAREN assign_stmt expr $@15 SEMICOLON expr RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 97 (for_expression_stmt)


state 240

   86 if_expression_stmt: ELSE LBRACE . $@9 stmts RBRACE

    $default  reduce using rule 85 ($@9)

    $@9  go to state 242


state 241

   91 repeat_until_stmt: REPEAT LBRACE $@10 stmts RBRACE $@11 UNTIL LPAREN expr $@12 RPAREN SEMICOLON .

    $default  reduce using rule 91 (repeat_until_stmt)


state 242

   86 if_expression_stmt: ELSE LBRACE $@9 . stmts RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmts               go to state 243
    stmt                go to state 27
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 243

    1 stmts: stmts . stmt
   86 if_expression_stmt: ELSE LBRACE $@9 stmts . RBRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    INT_VAL     shift, and go to state 7
    FLOAT_VAL   shift, and go to state 8
    TRUE_VAL    shift, and go to state 9
    FALSE_VAL   shift, and go to state 10
    CONST       shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 244
    LPAREN      shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    SWITCH      shift, and go to state 18
    IF          shift, and go to state 19
    REPEAT      shift, and go to state 20
    MINUS       shift, and go to state 21
    NOT         shift, and go to state 22
    VOID        shift, and go to state 23
    RETURN      shift, and go to state 24
    PRINT       shift, and go to state 25

    stmt                go to state 82
    expr                go to state 28
    bool_expr           go to state 29
    arithmetic_expr     go to state 30
    unary_expr          go to state 31
    binary_expr         go to state 32
    term                go to state 33
    negat               go to state 34
    para                go to state 35
    factor              go to state 36
    function_call       go to state 37
    const_dec_stmt      go to state 38
    var_dec_stmt        go to state 39
    assign_stmt         go to state 40
    while_stmt          go to state 41
    if_stmt             go to state 42
    repeat_until_stmt   go to state 43
    for_stmt            go to state 44
    switch_stmt         go to state 45
    type                go to state 46
    function            go to state 47
    function_prototype  go to state 48


state 244

   86 if_expression_stmt: ELSE LBRACE $@9 stmts RBRACE .

    $default  reduce using rule 86 (if_expression_stmt)
